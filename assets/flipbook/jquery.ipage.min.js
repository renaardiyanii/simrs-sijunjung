!(function (v, p, b, c) {
	"use strict";
	var t,
		g,
		d,
		e,
		o,
		h,
		l,
		u = function () {
			this.reset();
		};
	function i() {
		(this.isMobile = function () {
			return /Mobi|Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
				navigator.userAgent
			);
		}),
			(this.transitionEvent = function () {
				var t = b.createElement("fakeelement"),
					e = {
						transition: "transitionend",
						OTransition: "otransitionend",
						MozTransition: "transitionend",
						WebkitTransition: "webkitTransitionEnd",
					};
				for (var o in e) if (t.style[o] !== c) return e[o];
				return null;
			}),
			(this.animationEvent = function () {
				var t = b.createElement("fakeelement"),
					e = {
						animation: "animationend",
						MSAnimationEnd: "msAnimationEnd",
						OAnimation: "oAnimationEnd",
						MozAnimation: "mozAnimationEnd",
						WebkitAnimation: "webkitAnimationEnd",
					};
				for (var o in e) if (t.style[o] !== c) return e[o];
				return null;
			});
	}
	(u.prototype = {
		reset: function () {
			return (this.m = [1, 0, 0, 1, 0, 0]), this;
		},
		multiply: function (t) {
			var e = this.m[0] * t.m[0] + this.m[2] * t.m[1],
				o = this.m[1] * t.m[0] + this.m[3] * t.m[1],
				i = this.m[0] * t.m[2] + this.m[2] * t.m[3],
				s = this.m[1] * t.m[2] + this.m[3] * t.m[3],
				a = this.m[0] * t.m[4] + this.m[2] * t.m[5] + this.m[4],
				n = this.m[1] * t.m[4] + this.m[3] * t.m[5] + this.m[5];
			return (
				(this.m[0] = e),
				(this.m[1] = o),
				(this.m[2] = i),
				(this.m[3] = s),
				(this.m[4] = a),
				(this.m[5] = n),
				this
			);
		},
		inverse: function () {
			var t = new u();
			t.m = this.m.slice(0);
			var e = 1 / (t.m[0] * t.m[3] - t.m[1] * t.m[2]),
				o = t.m[3] * e,
				i = -t.m[1] * e,
				s = -t.m[2] * e,
				a = t.m[0] * e,
				n = e * (t.m[2] * t.m[5] - t.m[3] * t.m[4]),
				r = e * (t.m[1] * t.m[4] - t.m[0] * t.m[5]);
			return (
				(t.m[0] = o),
				(t.m[1] = i),
				(t.m[2] = s),
				(t.m[3] = a),
				(t.m[4] = n),
				(t.m[5] = r),
				t
			);
		},
		rotate: function (t) {
			var e = Math.cos(t),
				o = Math.sin(t),
				i = this.m[0] * e + this.m[2] * o,
				s = this.m[1] * e + this.m[3] * o,
				a = this.m[0] * -o + this.m[2] * e,
				n = this.m[1] * -o + this.m[3] * e;
			return (
				(this.m[0] = i), (this.m[1] = s), (this.m[2] = a), (this.m[3] = n), this
			);
		},
		translate: function (t, e) {
			return (
				(this.m[4] += this.m[0] * t + this.m[2] * e),
				(this.m[5] += this.m[1] * t + this.m[3] * e),
				this
			);
		},
		scale: function (t, e) {
			return (
				(this.m[0] *= t),
				(this.m[1] *= t),
				(this.m[2] *= e),
				(this.m[3] *= e),
				this
			);
		},
		transformPoint: function (t, e) {
			var o = t,
				i = e;
			return [
				(t = o * this.m[0] + i * this.m[2] + this.m[4]),
				(e = o * this.m[1] + i * this.m[3] + this.m[5]),
			];
		},
		transformVector: function (t, e) {
			var o = t,
				i = e;
			return [
				(t = o * this.m[0] + i * this.m[2]),
				(e = o * this.m[1] + i * this.m[3]),
			];
		},
		copy: function () {
			new u().m = this.m.slice(0);
		},
	}),
		(t =
			("undefined" != typeof self && self) ||
			(void 0 !== p && p) ||
			this.content ||
			this),
		(d = t.Uint8Array),
		(e = t.HTMLCanvasElement),
		(o = e && e.prototype),
		(h = /\s*;\s*base64\s*(?:;|$)/i),
		(l = "toDataURL"),
		d &&
			(g = new d([
				62, -1, -1, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1,
				0, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
				17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1, -1, 26, 27, 28,
				29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
				47, 48, 49, 50, 51,
			])),
		!e ||
			(o.toBlob && o.toBlobHD) ||
			(o.toBlob ||
				(o.toBlob = function (t, e) {
					if ((e || (e = "image/png"), this.mozGetAsFile))
						t(this.mozGetAsFile("canvas", e));
					else if (this.msToBlob && /^\s*image\/png\s*(?:$|;)/i.test(e))
						t(this.msToBlob());
					else {
						var o,
							i = Array.prototype.slice.call(arguments, 1),
							s = this[l].apply(this, i),
							a = s.indexOf(","),
							n = s.substring(a + 1),
							r = h.test(s.substring(0, a));
						Blob.fake
							? (((o = new Blob()).encoding = r ? "base64" : "URI"),
							  (o.data = n),
							  (o.size = n.length))
							: d &&
							  (o = r
									? new Blob(
											[
												(function (t) {
													for (
														var e,
															o,
															i = t.length,
															s = new d(((i / 4) * 3) | 0),
															a = 0,
															n = 0,
															r = [0, 0],
															h = 0,
															l = 0;
														i--;

													)
														(o = t.charCodeAt(a++)),
															255 !== (e = g[o - 43]) &&
																void 0 !== e &&
																((r[1] = r[0]),
																(r[0] = o),
																(l = (l << 6) | e),
																4 == ++h &&
																	((s[n++] = l >>> 16),
																	61 !== r[1] && (s[n++] = l >>> 8),
																	61 !== r[0] && (s[n++] = l),
																	(h = 0)));
													return s;
												})(n),
											],
											{ type: e }
									  )
									: new Blob([decodeURIComponent(n)], { type: e })),
							t(o);
					}
				}),
			!o.toBlobHD && o.toDataURLHD
				? (o.toBlobHD = function () {
						l = "toDataURLHD";
						var t = this.toBlob();
						return (l = "toDataURL"), t;
				  })
				: (o.toBlobHD = o.toBlob)),
		(function (h) {
			var l,
				g,
				t = ["wheel", "mousewheel", "DOMMouseScroll"],
				e =
					"onwheel" in b || 9 <= b.documentMode
						? ["wheel"]
						: ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"];
			if (h.event.fixHooks)
				for (var o = t.length; o; )
					h.event.fixHooks[t[--o]] = h.event.mouseHooks;
			function i(t) {
				var e,
					o,
					i = t || p.event,
					s = [].slice.call(arguments, 1),
					a = 0,
					n = 0,
					r = 0;
				return (
					((t = h.event.fix(i)).type = "mousewheel"),
					i.wheelDelta && (a = i.wheelDelta),
					i.detail && (a = -1 * i.detail),
					i.deltaY && (a = r = -1 * i.deltaY),
					i.deltaX && (a = -1 * (n = i.deltaX)),
					i.wheelDeltaY !== c && (r = i.wheelDeltaY),
					i.wheelDeltaX !== c && (n = -1 * i.wheelDeltaX),
					(e = Math.abs(a)),
					(!l || e < l) && (l = e),
					(o = Math.max(Math.abs(r), Math.abs(n))),
					(!g || o < g) && (g = o),
					s.unshift(t, Math.floor(a / l), Math.floor(n / g), Math.floor(r / g)),
					(h.event.dispatch || h.event.handle).apply(this, s)
				);
			}
			(h.event.special.mousewheel = {
				setup: function () {
					if (this.addEventListener)
						for (var t = e.length; t; ) this.addEventListener(e[--t], i, !1);
					else this.onmousewheel = i;
				},
				teardown: function () {
					if (this.removeEventListener)
						for (var t = e.length; t; ) this.removeEventListener(e[--t], i, !1);
					else this.onmousewheel = null;
				},
			}),
				h.fn.extend({
					mousewheel: function (t) {
						return t ? this.bind("mousewheel", t) : this.trigger("mousewheel");
					},
					unmousewheel: function (t) {
						return this.unbind("mousewheel", t);
					},
				});
		})(v),
		v('<iframe id="ipgs-scrollbar-listener"/>')
			.on("load", function () {
				var t = function () {
						if ("number" == typeof p.innerWidth)
							return p.innerWidth > b.documentElement.clientWidth;
						var t,
							e,
							o = b.documentElement || b.body;
						void 0 !== o.currentStyle && (t = o.currentStyle.overflow),
							(t = t || p.getComputedStyle(o, "").overflow),
							void 0 !== o.currentStyle && (e = o.currentStyle.overflowY),
							(e = e || p.getComputedStyle(o, "").overflowY);
						var i = o.scrollHeight > o.clientHeight,
							s = /^(visible|auto)$/.test(t) || /^(visible|auto)$/.test(e);
						return (i && s) || "scroll" === t || "scroll" === e;
					},
					e = t(),
					o = null;
				this.contentWindow.addEventListener("resize", function () {
					clearTimeout(o),
						(o = setTimeout(function () {
							t()
								? e || (v(top.window).trigger("scrollbar", [!0]), (e = !0))
								: e && (v(top.window).trigger("scrollbar", [!1]), (e = !1));
						}, 100));
				});
			})
			.appendTo("body");
	var f = "ipages-instance",
		s = 0,
		P = { SINGLE: 1, DOUBLE: 2 };
	function a(t, e) {
		(this.name = "TwoPageFlip"),
			(this.root = t),
			(this.config = e),
			(this.leftPage = null),
			(this.rightPage = null),
			(this.leftBackPage = null),
			(this.rightBackPage = null),
			(this.leftBelowPage = null),
			(this.rightBelowPage = null),
			(this.$animation = null),
			(this.swipe = {
				startY: 0,
				startX: 0,
				endY: 0,
				endX: 0,
				diffY: 0,
				diffX: 0,
				startTouch: !1,
				startAngle: 0,
				prevAngle: 0,
				angle: 0,
				angleThreshold: 30,
			});
	}
	function n(t, e) {
		(this.name = "OnePageFlip"),
			(this.root = t),
			(this.config = e),
			(this.prevPage = null),
			(this.currPage = null),
			(this.nextPage = null),
			(this.$animation = null),
			(this.swipe = {
				startY: 0,
				startX: 0,
				endY: 0,
				endX: 0,
				diffY: 0,
				diffX: 0,
				startTouch: !1,
				startAngle: 0,
				prevAngle: 0,
				angle: 0,
				angleThreshold: 30,
			});
	}
	function r(t, e) {
		(this.name = "OnePageSwipe"),
			(this.root = t),
			(this.config = e),
			(this.prevPage = null),
			(this.currPage = null),
			(this.nextPage = null),
			(this.$animation = null),
			(this.swipe = {
				startY: 0,
				startX: 0,
				endY: 0,
				endX: 0,
				diffY: 0,
				diffX: 0,
				startTouch: !1,
				startOffset: 0,
				prevOffset: 0,
				offset: 0,
				offsetThreshold: 30,
			});
	}
	function m(t, e) {
		(this.id = s++),
			(this.util = new i()),
			(this.$body = null),
			(this.$container = null),
			(this.$placeholder = null),
			(this.config = null),
			(this.bookWidth = 0),
			(this.bookHeight = 0),
			(this.pageWidth = 0),
			(this.pageHeight = 0),
			(this.currPage = 0),
			(this.pageIndexPrev = 0),
			(this.stagePadding = { top: 0, left: 0, right: 0, bottom: 0 }),
			(this.pdf = null),
			(this.pdfPageSize = P.SINGLE),
			(this.pdfPageCount = 0),
			(this.pdfFirstPage = null),
			(this.pdfFirstPageViewport = null),
			(this.pdfFirstPageRatio = 0),
			(this.pdfPagesRefCache = null),
			(this.pdfAnnotationsRefCache = null),
			(this.matrix = new u()),
			(this.lastDelta = { x: 0, y: 0 }),
			(this.lastScale = 0),
			(this.tapped = null),
			(this.zoomTimerId = null),
			(this.pinchZoom = {
				zoom: 0,
				startDate: !1,
				aStartX: 0,
				aStartY: 0,
				aCurX: 0,
				aCurY: 0,
				aIsMoving: !1,
				bStartX: 0,
				bStartY: 0,
				bCurX: 0,
				bCurY: 0,
				bIsMoving: !1,
			}),
			(this.dragNavigation = {
				target: null,
				startX: 0,
				startY: 0,
				x: 0,
				y: 0,
			}),
			(this.thumbnailsScrollTimerId = null),
			(this.thumbnailsScrollTimeout = 2e3),
			(this.themeClass = null),
			(this.engineClass = null),
			(this.engine = null),
			(this.ready = !1),
			(this.controls = {}),
			(this.pages = []),
			(this.bookmarksMap = new Map()),
			(this.bookTransitionTimerId = null),
			this._init(t, e);
	}
	(a.prototype = {
		_normalizePageIndex: function (t) {
			return t
				? t < 0
					? 0
					: t > this.root.pages.length - 1
					? this.root.pages.length - 1
					: t
				: 0;
		},
		_isPageLeft: function (t) {
			return !!(t % 2);
		},
		_isPageRight: function (t) {
			return !this._isPageLeft(t);
		},
		_getLeftPageIndex: function (t) {
			return (
				this._isPageRight(t) && (t += -1),
				t < 0 || t > this.root.pages.length - 1 ? null : t
			);
		},
		_getRightPageIndex: function (t) {
			return (
				this._isPageLeft(t) && (t += 1),
				t < 0 || t > this.root.pages.length - 1 ? null : t
			);
		},
		_getBackPageIndex: function (t) {
			return (
				(t || 0 == t) && (t += this._isPageLeft(t) ? -1 : 1),
				t < 0 || t > this.root.pages.length - 1 ? null : t
			);
		},
		_getBelowPageIndex: function (t) {
			return (
				(t || 0 == t) && (t += this._isPageLeft(t) ? -2 : 2),
				t < 0 || t > this.root.pages.length - 1 ? null : t
			);
		},
		_clearSwipe: function () {
			(this.swipe.startY = 0),
				(this.swipe.startX = 0),
				(this.swipe.endY = 0),
				(this.swipe.endX = 0),
				(this.swipe.diffY = 0),
				(this.swipe.diffX = 0),
				(this.swipe.startAngle = 0),
				(this.swipe.prevAngle = 0),
				(this.swipe.angle = 0),
				(this.swipe.startTouch = !1);
		},
		_stopAnimation: function (t) {
			this.$animation && this.$animation.stop(!0, t || !1),
				(this.$animation = null);
		},
		_setAngle: function (t) {
			t <= -180 ? (t = -180) : 180 <= t && (t = 180);
			var e = Math.abs(t),
				o = (90 < e ? 180 - e : e) / 200;
			if (t < 0) {
				if (null == this.rightBackPage) return;
				if (
					(null != this.rightBelowPage &&
						(this.root.pages[this.rightBelowPage].css({
							display: "block",
							transform: "",
							"z-index": 1,
						}),
						this.root._setShowHidePageState(this.rightBelowPage, !0)),
					null != this.leftBelowPage &&
						this.root.pages[this.leftBelowPage].css({ "z-index": 2 }),
					null != this.leftBackPage &&
						this.root.pages[this.leftBackPage].css({ "z-index": 3 }),
					null != this.leftPage &&
						this.root.pages[this.leftPage].css({ "z-index": 4 }),
					90 < e
						? (null != this.rightPage &&
								(this.root.pages[this.rightPage].css({ display: "none" }),
								this.root._setShowHidePageState(this.rightPage, !1)),
						  null != this.rightBackPage &&
								(this.root.pages[this.rightBackPage]
									.css({
										display: "block",
										transform: "rotateY(" + (180 + t) + "deg) translateZ(0px)",
										"z-index": 7,
									})
									.$shadow.css({ opacity: o }),
								this.root._setShowHidePageState(this.rightBackPage, !0)))
						: (null != this.rightPage &&
								(this.root.pages[this.rightPage]
									.css({
										display: "block",
										transform: "rotateY(" + t + "deg) translateZ(0px)",
										"z-index": 7,
									})
									.$shadow.css({ opacity: o }),
								this.root._setShowHidePageState(this.rightPage, !0)),
						  null != this.rightBackPage &&
								(this.root.pages[this.rightBackPage].css({ display: "none" }),
								this.root._setShowHidePageState(this.rightBackPage, !1))),
					null == this.leftPage)
				) {
					if (90 < e) {
						var i = 1 - (e - 90) / 90,
							s = s - ((this.root.pageWidth * this.root._getZoom()) / 2) * i;
						this.root.controls.$book.css({
							transform: "translateX(" + s + "px)",
						});
					}
				} else if (null == this.rightBelowPage && e < 90) {
					(i = 1 - (90 - e) / 90),
						(s = s + ((this.root.pageWidth * this.root._getZoom()) / 2) * i);
					this.root.controls.$book.css({
						transform: "translateX(" + s + "px)",
					});
				}
			} else if (0 <= t) {
				if (null == this.leftBackPage) return;
				if (
					(null != this.leftBelowPage &&
						(this.root.pages[this.leftBelowPage].css({
							display: "block",
							transform: "",
							"z-index": 1,
						}),
						this.root._setShowHidePageState(this.leftBelowPage, !0)),
					null != this.rightBelowPage &&
						this.root.pages[this.rightBelowPage].css({ "z-index": 2 }),
					null != this.rightBackPage &&
						this.root.pages[this.rightBackPage].css({ "z-index": 3 }),
					null != this.rightPage &&
						this.root.pages[this.rightPage].css({ "z-index": 4 }),
					90 < e
						? (null != this.leftPage &&
								(this.root.pages[this.leftPage].css({ display: "none" }),
								this.root._setShowHidePageState(this.leftPage, !1)),
						  null != this.leftBackPage &&
								(this.root.pages[this.leftBackPage]
									.css({
										display: "block",
										transform: "rotateY(" + (-180 + t) + "deg) translateZ(0px)",
										"z-index": 7,
									})
									.$shadow.css({ opacity: o }),
								this.root._setShowHidePageState(this.leftBackPage, !0)))
						: (null != this.leftPage &&
								(this.root.pages[this.leftPage]
									.css({
										display: "block",
										transform: "rotateY(" + t + "deg) translateZ(0px)",
										"z-index": 7,
									})
									.$shadow.css({ opacity: o }),
								this.root._setShowHidePageState(this.leftPage, !0)),
						  null != this.leftBackPage &&
								(this.root.pages[this.leftBackPage].css({ display: "none" }),
								this.root._setShowHidePageState(this.leftBackPage, !1))),
					null == this.leftBelowPage)
				) {
					if (e < 90) {
						(i = 1 - (90 - e) / 90),
							(s = s - ((this.root.pageWidth * this.root._getZoom()) / 2) * i);
						this.root.controls.$book.css({
							transform: "translateX(" + s + "px)",
						});
					}
				} else if (null == this.rightPage && 90 < e) {
					(i = 1 - (e - 90) / 90), (s = 0);
					(s += ((this.root.pageWidth * this.root._getZoom()) / 2) * i),
						this.root.controls.$book.css({
							transform: "translateX(" + s + "px)",
						});
				}
			}
		},
		_animateTurnPage: function (t, e) {
			var o = v.Deferred();
			this._stopAnimation();
			var i = this,
				s = (this.root.config.flipDuration / 180) * Math.abs(e - t);
			return (
				(this.$animation = v({ angle: t })),
				this.$animation.animate(
					{ angle: e },
					{
						duration: s,
						easing: "linear",
						done: function () {
							i.swipe.startAngle = 0;
							var t = (i.$animation = null);
							null !=
								(t =
									180 == e
										? i.leftBackPage
										: -180 == e
										? i.rightBackPage
										: null != i.leftPage
										? i.leftPage
										: null != i.rightPage
										? i.rightPage
										: null) && i.showPage(t),
								o.resolve();
						},
						fail: function () {
							o.reject();
						},
						step: function (t) {
							(i.swipe.startAngle = t), i._setAngle(t);
						},
					}
				),
				o.promise()
			);
		},
		updateBook: function (t) {
			for (var e = !0, o = 0, i = this.root.pages.length; o < i; o++) {
				var s = this.root.pages[o];
				s
					.toggleClass("ipgs-left", !e)
					.toggleClass("ipgs-right", e)
					.removeClass("ipgs-show")
					.addClass("ipgs-hide"),
					(s.pageLeft = !e),
					(e = !(s.pageRight = e));
			}
			t && this.showPage(this.root.currPage);
		},
		updateBookLayout: function () {
			var t = 0;
			0 == this.rightPage
				? (t -= (this.root.pageWidth * this.root._getZoom()) / 2)
				: this.leftPage == this.root.pages.length - 1 &&
				  (t += (this.root.pageWidth * this.root._getZoom()) / 2),
				this.root.controls.$book.css({ transform: "translateX(" + t + "px)" });
			for (var e = 0, o = this.root.pages.length; e < o; e++) {
				var i = this.root.pages[e];
				i.css({
					left: i.pageRight
						? this.root.pageWidth * this.root._getZoom() - 1
						: 0,
				});
			}
		},
		showPage: function (t) {
			t = this._normalizePageIndex(t);
			var e = this._getLeftPageIndex(t),
				o = this._getRightPageIndex(t),
				i = this._getBackPageIndex(e),
				s = this._getBackPageIndex(o),
				a = this._getBelowPageIndex(e),
				n = this._getBelowPageIndex(o);
			this.root._loadPageData(e),
				this.root._loadPageData(o),
				this.root.config.preloadNeighbours &&
					(this.root._loadPageData(i),
					this.root._loadPageData(s),
					this.root._loadPageData(a),
					this.root._loadPageData(n));
			for (var r = 0, h = this.root.pages.length; r < h; r++) {
				var l = this.root.pages[r],
					g = "none",
					p = 0,
					c = !1;
				(r != e && r != o) || ((g = "block"), (p = 1), (c = !0)),
					l.css({
						display: g,
						top: 0,
						left: l.pageRight ? this.root.pageWidth * this.root._getZoom() : 0,
						transform: "",
						"z-index": p,
					}),
					this.root._setShowHidePageState(r, c);
			}
			(this.root.currPage = t),
				(this.leftPage = e),
				(this.rightPage = o),
				(this.leftBackPage = i),
				(this.rightBackPage = s),
				(this.leftBelowPage = a),
				(this.rightBelowPage = n),
				null != this.leftPage &&
					this.root.pages[this.leftPage].$shadow.css({ opacity: 0 }),
				null != this.leftBackPage &&
					this.root.pages[this.leftBackPage].$shadow.css({ opacity: 0 }),
				null != this.leftBelowPage &&
					this.root.pages[this.leftBelowPage].$shadow.css({ opacity: 0 }),
				null != this.rightPage &&
					this.root.pages[this.rightPage].$shadow.css({ opacity: 0 }),
				null != this.rightBackPage &&
					this.root.pages[this.rightBackPage].$shadow.css({ opacity: 0 }),
				null != this.rightBelowPage &&
					this.root.pages[this.rightBelowPage].$shadow.css({ opacity: 0 }),
				this.updateBookLayout(),
				this.root._onShowPage(t);
		},
		gotoPage: function (t) {
			if (
				(this._stopAnimation(!0),
				(t = this._normalizePageIndex(t)),
				this.leftPage != t && this.rightPage != t)
			) {
				var e = t,
					o = e < this.root.currPage ? 180 : -180;
				o < 0
					? (null != this.rightBackPage &&
							this.root.pages[this.rightBackPage].css({
								display: "none",
								transform: "",
								"z-index": 0,
							}),
					  null != this.rightBelowPage &&
							this.root.pages[this.rightBelowPage].css({
								display: "none",
								transform: "",
								"z-index": 0,
							}),
					  this._isPageLeft(e)
							? ((this.rightBackPage = e),
							  (this.rightBelowPage = this._getRightPageIndex(e)))
							: ((this.rightBackPage = this._getLeftPageIndex(e)),
							  (this.rightBelowPage = e)))
					: (null != this.leftBackPage &&
							this.root.pages[this.leftBackPage].css({
								display: "none",
								transform: "",
								"z-index": 0,
							}),
					  null != this.leftBelowPage &&
							this.root.pages[this.leftBelowPage].css({
								display: "none",
								transform: "",
								"z-index": 0,
							}),
					  this._isPageRight(e)
							? ((this.leftBackPage = e),
							  (this.leftBelowPage = this._getLeftPageIndex(e)))
							: ((this.leftBackPage = this._getRightPageIndex(e)),
							  (this.leftBelowPage = e))),
					this._animateTurnPage(0, o);
			}
		},
		gotoNext: function () {
			null != this.rightBackPage && this.gotoPage(this.rightBackPage);
		},
		gotoPrev: function () {
			null != this.leftBackPage && this.gotoPage(this.leftBackPage);
		},
		onSwipeDown: function (t) {
			(this.swipe.startY = this.swipe.endY = t.pageY),
				(this.swipe.startX = this.swipe.endX = t.pageX),
				(this.swipe.startTouch = !0),
				this._stopAnimation(),
				(this.swipe.prevAngle = this.swipe.angle),
				(this.swipe.angle = this.swipe.startAngle);
		},
		onSwipeMove: function (t) {
			this.swipe.startTouch &&
				((this.swipe.endY = t.pageY),
				(this.swipe.endX = t.pageX),
				(this.swipe.diffY = this.swipe.endY - this.swipe.startY),
				(this.swipe.diffX = this.swipe.endX - this.swipe.startX),
				(this.swipe.prevAngle = this.swipe.angle),
				(this.swipe.angle =
					this.swipe.startAngle +
					(this.swipe.diffX / (this.root.controls.$bookWrap.width() / 2)) *
						180),
				this._setAngle(this.swipe.angle));
		},
		onSwipeUp: function (t) {
			if (this.swipe.startTouch) {
				this.swipe.startTouch = !1;
				var e = this.swipe.angle,
					o =
						Math.abs(this.swipe.angle) < this.swipe.angleThreshold
							? 0
							: this.swipe.angle < 0
							? -180
							: 180;
				if (
					(((o < 0 && 0 < this.swipe.angle - this.swipe.prevAngle) ||
						(0 < o && this.swipe.angle - this.swipe.prevAngle < 0)) &&
						(o = 0),
					o == e ||
						(0 < o && null == this.leftPage) ||
						(o < 0 && null == this.rightPage))
				)
					return void this._clearSwipe();
				this._animateTurnPage(e, o).always(function () {});
			}
		},
	}),
		(n.prototype = {
			_normalizePageIndex: function (t) {
				return t
					? t < 0
						? 0
						: t > this.root.pages.length - 1
						? this.root.pages.length - 1
						: t
					: 0;
			},
			_getPrevPageIndex: function (t) {
				return (
					(t || 0 == t) && (t -= 1),
					t < 0 || t > this.root.pages.length - 1 ? null : t
				);
			},
			_getNextPageIndex: function (t) {
				return (
					(t || 0 == t) && (t += 1),
					t < 0 || t > this.root.pages.length - 1 ? null : t
				);
			},
			_clearSwipe: function () {
				(this.swipe.startY = 0),
					(this.swipe.startX = 0),
					(this.swipe.endY = 0),
					(this.swipe.endX = 0),
					(this.swipe.diffY = 0),
					(this.swipe.diffX = 0),
					(this.swipe.startAngle = 0),
					(this.swipe.prevAngle = 0),
					(this.swipe.angle = 0),
					(this.swipe.startTouch = !1);
			},
			_stopAnimation: function (t) {
				this.$animation && this.$animation.stop(!0, t || !1),
					(this.$animation = null);
			},
			_setAngle: function (t) {
				t <= -90 ? (t = -90) : 90 <= t && (t = 90);
				Math.abs(t);
				if (t < 0) {
					if (null == this.nextPage) return;
					null != this.prevPage &&
						(this.root.pages[this.prevPage].css({ display: "none" }),
						this.root._setShowHidePageState(this.prevPage, !1)),
						null != this.currPage &&
							(this.root.pages[this.currPage]
								.css({
									display: "block",
									transform: "rotateY(" + t + "deg) translateZ(0px)",
									"z-index": 2,
								})
								.$shadow.css({ opacity: 0 }),
							this.root._setShowHidePageState(this.currPage, !0)),
						null != this.nextPage &&
							(this.root.pages[this.nextPage].css({
								display: "block",
								transform: "",
								"z-index": 1,
							}),
							this.root._setShowHidePageState(this.nextPage, !0));
				} else if (0 <= t) {
					if (null == this.prevPage) return;
					null != this.prevPage &&
						(this.root.pages[this.prevPage]
							.css({
								display: "block",
								transform: "rotateY(" + (-90 + t) + "deg) translateZ(0px)",
								"z-index": 2,
							})
							.$shadow.css({ opacity: 0 }),
						this.root._setShowHidePageState(this.prevPage, !0)),
						null != this.currPage &&
							(this.root.pages[this.currPage].css({
								display: "block",
								transform: "",
								"z-index": 1,
							}),
							this.root._setShowHidePageState(this.currPage, !0)),
						null != this.nextPage &&
							(this.root.pages[this.nextPage].css({ display: "none" }),
							this.root._setShowHidePageState(this.nextPage, !1));
				}
			},
			_animateTurnPage: function (t, e) {
				var o = v.Deferred();
				this._stopAnimation();
				var i = this,
					s = (this.root.config.flipDuration / 90) * Math.abs(e - t);
				return (
					(this.$animation = v({ angle: t })),
					this.$animation.animate(
						{ angle: e },
						{
							duration: s,
							easing: "linear",
							done: function () {
								i.swipe.startAngle = 0;
								var t = (i.$animation = null);
								null !=
									(t =
										90 == e
											? i.prevPage
											: -90 == e
											? i.nextPage
											: null != i.currPage
											? i.currPage
											: null) && i.showPage(t),
									o.resolve();
							},
							fail: function () {
								o.reject();
							},
							step: function (t) {
								(i.swipe.startAngle = t), i._setAngle(t);
							},
						}
					),
					o.promise()
				);
			},
			updateBook: function (t) {
				for (var e = 0, o = this.root.pages.length; e < o; e++) {
					var i = this.root.pages[e];
					i
						.toggleClass("ipgs-right", !0)
						.removeClass("ipgs-show")
						.addClass("ipgs-hide"),
						(i.pageIndex = e);
				}
				t && this.showPage(this.root.currPage);
			},
			updateBookLayout: function () {},
			showPage: function (t) {
				var e = (t = this._normalizePageIndex(t)),
					o = this._getPrevPageIndex(e),
					i = this._getNextPageIndex(e);
				this.root._loadPageData(e),
					this.root.config.preloadNeighbours &&
						(this.root._loadPageData(o), this.root._loadPageData(i));
				for (var s = 0, a = this.root.pages.length; s < a; s++) {
					var n = "none",
						r = 0,
						h = !1;
					s == e && ((n = "block"), (r = 1), (h = !0)),
						this.root.pages[s].css({
							display: n,
							top: 0,
							left: 0,
							transform: "",
							"z-index": r,
						}),
						this.root._setShowHidePageState(s, h);
				}
				(this.root.currPage = t),
					(this.currPage = e),
					(this.prevPage = o),
					(this.nextPage = i),
					null != this.currPage &&
						this.root.pages[this.currPage].$shadow.css({ opacity: 0 }),
					null != this.prevPage &&
						this.root.pages[this.prevPage].$shadow.css({ opacity: 0 }),
					null != this.nextPage &&
						this.root.pages[this.nextPage].$shadow.css({ opacity: 0 }),
					this.updateBookLayout(),
					this.root._onShowPage(t);
			},
			gotoPage: function (t) {
				if (
					(this._stopAnimation(!0),
					(t = this._normalizePageIndex(t)),
					this.currPage != t)
				) {
					var e = t,
						o = e < this.currPage ? 90 : -90;
					o < 0
						? (null != this.prevPage &&
								this.root.pages[this.prevPage].css({
									display: "none",
									transform: "",
									"z-index": 0,
								}),
						  (this.nextPage = e))
						: (null != this.nextPage &&
								this.root.pages[this.nextPage].css({
									display: "none",
									transform: "",
									"z-index": 0,
								}),
						  (this.prevPage = e)),
						this._animateTurnPage(0, o);
				}
			},
			gotoNext: function () {
				null != this.nextPage && this.gotoPage(this.nextPage);
			},
			gotoPrev: function () {
				null != this.prevPage && this.gotoPage(this.prevPage);
			},
			onSwipeDown: function (t) {
				(this.swipe.startY = this.swipe.endY = t.pageY),
					(this.swipe.startX = this.swipe.endX = t.pageX),
					(this.swipe.startTouch = !0),
					this._stopAnimation(),
					(this.swipe.prevAngle = this.swipe.angle),
					(this.swipe.angle = this.swipe.startAngle);
			},
			onSwipeMove: function (t) {
				this.swipe.startTouch &&
					((this.swipe.endY = t.pageY),
					(this.swipe.endX = t.pageX),
					(this.swipe.diffY = this.swipe.endY - this.swipe.startY),
					(this.swipe.diffX = this.swipe.endX - this.swipe.startX),
					(this.swipe.prevAngle = this.swipe.angle),
					(this.swipe.angle =
						this.swipe.startAngle +
						(this.swipe.diffX / this.root.controls.$bookWrap.width()) * 180),
					this._setAngle(this.swipe.angle));
			},
			onSwipeUp: function (t) {
				if (this.swipe.startTouch) {
					this.swipe.startTouch = !1;
					var e = this.swipe.angle,
						o =
							Math.abs(this.swipe.angle) < this.swipe.angleThreshold
								? 0
								: this.swipe.angle < 0
								? -90
								: 90;
					if (
						(((o < 0 && 0 < this.swipe.angle - this.swipe.prevAngle) ||
							(0 < o && this.swipe.angle - this.swipe.prevAngle < 0)) &&
							(o = 0),
						o == e ||
							(0 < o && null == this.prevPage) ||
							(o < 0 && null == this.nextPage))
					)
						return void this._clearSwipe();
					this._animateTurnPage(e, o).always(function () {});
				}
			},
		}),
		(m.prototype = {
			VERSION: "1.4.7",
			defaultConfig: {
				bookEngine: "TwoPageFlip",
				bookEnginePortrait: null,
				bookEngineLandscape: null,
				ratioPortraitToLandscape: 1.3,
				bookTheme: "default",
				pageWidth: 300,
				pageHeight: 360,
				pageSizeAuto: !0,
				pageStart: 1,
				pdfUrl: null,
				pdfAutoLoad: !0,
				pdfCoverImageUrl: null,
				pdfAutoCreatePages: !(r.prototype = {
					_normalizePageIndex: function (t) {
						return t
							? t < 0
								? 0
								: t > this.root.pages.length - 1
								? this.root.pages.length - 1
								: t
							: 0;
					},
					_getPrevPageIndex: function (t) {
						return (
							(t || 0 == t) && (t -= 1),
							t < 0 || t > this.root.pages.length - 1 ? null : t
						);
					},
					_getNextPageIndex: function (t) {
						return (
							(t || 0 == t) && (t += 1),
							t < 0 || t > this.root.pages.length - 1 ? null : t
						);
					},
					_clearSwipe: function () {
						(this.swipe.startY = 0),
							(this.swipe.startX = 0),
							(this.swipe.endY = 0),
							(this.swipe.endX = 0),
							(this.swipe.diffY = 0),
							(this.swipe.diffX = 0),
							(this.swipe.startOffset = 0),
							(this.swipe.prevOffset = 0),
							(this.swipe.offset = 0),
							(this.swipe.startTouch = !1);
					},
					_stopAnimation: function (t) {
						this.$animation && this.$animation.stop(!0, t || !1),
							(this.$animation = null);
					},
					_setOffset: function (t) {
						t <= -50 ? (t = -50) : 50 <= t && (t = 50);
						var e = this.root.controls.$book.width(),
							o = this.root.controls.$bookWrap.width() / e;
						this.root.config.autoFit ||
							(this.root.config.responsive && o < 1) ||
							(o = 1);
						var i =
								(i =
									this.root.$container.width() / 2 +
									(this.root.pageWidth * o) / 2) / o,
							s = this.config.pageFade ? Math.abs(t) / 50 : 1,
							a = this.config.pageFade ? 1 - s : 1;
						if ((t = (i * t) / 50) < 0) {
							if (null == this.nextPage) return;
							null != this.prevPage &&
								(this.root.pages[this.prevPage].css({ display: "none" }),
								this.root._setShowHidePageState(this.prevPage, !1)),
								null != this.currPage &&
									(this.root.pages[this.currPage].css({
										display: "block",
										transform: "translateX(" + t + "px) translateZ(0px)",
										"z-index": 2,
										opacity: a,
									}),
									this.root._setShowHidePageState(this.currPage, !0)),
								null != this.nextPage &&
									(this.root.pages[this.nextPage].css({
										display: "block",
										transform: "translateX(" + (i + t) + "px) translateZ(0px)",
										"z-index": 1,
										opacity: s,
									}),
									this.root._setShowHidePageState(this.nextPage, !0));
						} else if (0 <= t) {
							if (null == this.prevPage) return;
							null != this.prevPage &&
								(this.root.pages[this.prevPage].css({
									display: "block",
									transform: "translateX(" + (-i + t) + "px) translateZ(0px)",
									"z-index": 1,
									opacity: s,
								}),
								this.root._setShowHidePageState(this.prevPage, !0)),
								null != this.currPage &&
									(this.root.pages[this.currPage].css({
										display: "block",
										transform: "translateX(" + t + "px) translateZ(0px)",
										"z-index": 2,
										opacity: a,
									}),
									this.root._setShowHidePageState(this.currPage, !0)),
								null != this.nextPage &&
									(this.root.pages[this.nextPage].css({ display: "none" }),
									this.root._setShowHidePageState(this.nextPage, !1));
						}
					},
					_animateSwipePage: function (t, e) {
						var o = v.Deferred();
						this._stopAnimation();
						var i = this,
							s = (this.root.config.flipDuration / 90) * Math.abs(e - t);
						return (
							(this.$animation = v({ offset: t })),
							this.$animation.animate(
								{ offset: e },
								{
									duration: s,
									easing: "linear",
									done: function () {
										i.swipe.startOffset = 0;
										var t = (i.$animation = null);
										null !=
											(t =
												50 == e
													? i.prevPage
													: -50 == e
													? i.nextPage
													: null != i.currPage
													? i.currPage
													: null) && i.showPage(t),
											o.resolve();
									},
									fail: function () {
										o.reject();
									},
									step: function (t) {
										(i.swipe.startOffset = t), i._setOffset(t);
									},
								}
							),
							o.promise()
						);
					},
					updateBook: function (t) {
						for (var e = 0, o = this.root.pages.length; e < o; e++) {
							var i = this.root.pages[e];
							i.removeClass("ipgs-show").addClass("ipgs-hide"),
								(i.pageIndex = e);
						}
						t && this.showPage(this.root.currPage);
					},
					updateBookLayout: function () {},
					showPage: function (t) {
						var e = (t = this._normalizePageIndex(t)),
							o = this._getPrevPageIndex(e),
							i = this._getNextPageIndex(e);
						this.root._loadPageData(e),
							this.root.config.preloadNeighbours &&
								(this.root._loadPageData(o), this.root._loadPageData(i));
						for (var s = 0, a = this.root.pages.length; s < a; s++) {
							var n = "none",
								r = 0,
								h = !1;
							s == e && ((n = "block"), (r = 1), (h = !0)),
								this.root.pages[s].css({
									display: n,
									top: 0,
									left: 0,
									transform: "",
									opacity: "",
									"z-index": r,
								}),
								this.root._setShowHidePageState(s, h);
						}
						(this.root.currPage = t),
							(this.currPage = e),
							(this.prevPage = o),
							(this.nextPage = i),
							null != this.currPage &&
								this.root.pages[this.currPage].$shadow.css({ opacity: 0 }),
							null != this.prevPage &&
								this.root.pages[this.prevPage].$shadow.css({ opacity: 0 }),
							null != this.nextPage &&
								this.root.pages[this.nextPage].$shadow.css({ opacity: 0 }),
							this.updateBookLayout(),
							this.root._onShowPage(t);
					},
					gotoPage: function (t) {
						if (
							(this._stopAnimation(!0),
							(t = this._normalizePageIndex(t)),
							this.currPage != t)
						) {
							var e = t,
								o = e < this.currPage ? 50 : -50;
							o < 0
								? (null != this.prevPage &&
										this.root.pages[this.prevPage].css({
											display: "none",
											transform: "",
											"z-index": 0,
										}),
								  (this.nextPage = e))
								: (null != this.nextPage &&
										this.root.pages[this.nextPage].css({
											display: "none",
											transform: "",
											"z-index": 0,
										}),
								  (this.prevPage = e)),
								this._animateSwipePage(0, o);
						}
					},
					gotoNext: function () {
						null != this.nextPage && this.gotoPage(this.nextPage);
					},
					gotoPrev: function () {
						null != this.prevPage && this.gotoPage(this.prevPage);
					},
					onSwipeDown: function (t) {
						(this.swipe.startY = this.swipe.endY = t.pageY),
							(this.swipe.startX = this.swipe.endX = t.pageX),
							(this.swipe.startTouch = !0),
							this._stopAnimation(),
							(this.swipe.prevOffset = this.swipe.offset),
							(this.swipe.offset = this.swipe.startOffset);
					},
					onSwipeMove: function (t) {
						this.swipe.startTouch &&
							((this.swipe.endY = t.pageY),
							(this.swipe.endX = t.pageX),
							(this.swipe.diffY = this.swipe.endY - this.swipe.startY),
							(this.swipe.diffX = this.swipe.endX - this.swipe.startX),
							(this.swipe.prevOffset = this.swipe.offset),
							(this.swipe.offset =
								this.swipe.startOffset +
								(this.swipe.diffX / this.root.controls.$bookWrap.width()) *
									100),
							this._setOffset(this.swipe.offset));
					},
					onSwipeUp: function (t) {
						if (this.swipe.startTouch) {
							this.swipe.startTouch = !1;
							var e =
									((this.root.controls.$bookWrap.width() / 2 +
										this.root.pageWidth / 2) *
										this.swipe.offset) /
									50,
								o = this.swipe.offset,
								i =
									Math.abs(e) < this.swipe.offsetThreshold
										? 0
										: this.swipe.offset < 0
										? -50
										: 50;
							if (
								(((i < 0 && 0 < this.swipe.offset - this.swipe.prevOffset) ||
									(0 < i && this.swipe.offset - this.swipe.prevOffset < 0)) &&
									(i = 0),
								i == o ||
									(0 < i && null == this.prevPage) ||
									(i < 0 && null == this.nextPage))
							)
								return void this._clearSwipe();
							this._animateSwipePage(o, i).always(function () {});
						}
					},
				}),
				pdfDisableRangeRequests: !0,
				preloadNeighbours: !1,
				responsive: !0,
				autoFit: !0,
				autoHeight: !1,
				flipSound: !1,
				flipSoundUrl: null,
				perspective: 1500,
				padding: { top: 10, right: 10, bottom: 10, left: 10 },
				flipDuration: 300,
				pageNumbers: !0,
				pageNumbersFirst: 1,
				pageNumbersHidden: [],
				pageImagesUrl: null,
				pageImagesFirst: 1,
				pageImagesCount: 0,
				prevnextButtons: !0,
				touchNavigation: !0,
				keyboardNavigation: !0,
				mouseDragNavigation: !0,
				mousePageClickNavigation: !1,
				mouseWheelNavigation: !1,
				mouseWheelPreventDefault: !0,
				zoom: 1,
				zoomMax: 7,
				zoomMin: 1,
				zoomStep: 0.05,
				zoomFocal: !0,
				dblClickZoomDefault: !1,
				mouseWheelZoom: !0,
				keyboardZoom: !0,
				pinchZoom: !0,
				pinchZoomCoef: 0.005,
				toolbar: !0,
				toolbarControls: [
					{
						type: "share",
						active: !0,
						title: "share",
						icon: "ipgs-icon-share",
					},
					{
						type: "outline",
						active: !0,
						title: "toggle outline/bookmarks",
						icon: "ipgs-icon-outline",
					},
					{
						type: "thumbnails",
						active: !0,
						title: "toggle thumbnails",
						icon: "ipgs-icon-thumbnails",
					},
					{
						type: "sound",
						active: !0,
						title: "turn on/off flip sound",
						icon: "ipgs-icon-sound",
					},
					{
						type: "gotofirst",
						active: !0,
						title: "goto first page",
						icon: "ipgs-icon-gotofirst",
					},
					{
						type: "prev",
						active: !0,
						title: "prev page",
						icon: "ipgs-icon-prev",
					},
					{
						type: "pagenumber",
						active: !0,
						title: "goto page number",
						icon: "ipgs-icon-pagenumber",
					},
					{
						type: "next",
						active: !0,
						title: "next page",
						icon: "ipgs-icon-next",
					},
					{
						type: "gotolast",
						active: !0,
						title: "goto last page",
						icon: "ipgs-icon-gotolast",
					},
					{
						type: "download",
						active: !1,
						title: "download pdf",
						icon: "ipgs-icon-download",
					},
					{
						type: "zoom-in",
						active: !0,
						title: "zoom in",
						icon: "ipgs-icon-zoom-in",
					},
					{
						type: "zoom-out",
						active: !0,
						title: "zoom out",
						icon: "ipgs-icon-zoom-out",
					},
					{
						type: "zoom-default",
						active: !0,
						title: "zoom default",
						icon: "ipgs-icon-zoom-default",
					},
					{
						type: "fullscreen",
						active: !0,
						title: "toggle fullscreen",
						icon: "ipgs-icon-fullscreen",
					},
				],
				autoEnableThumbnails: !1,
				autoEnableOutline: !1,
				autoEnableShare: !1,
				pages: [],
				bookmarks: [],
				shareControls: [
					{
						type: "facebook",
						active: !0,
						title: "facebook",
						icon: "ipgs-share-icon-facebook",
					},
					{
						type: "twitter",
						active: !0,
						title: "twitter",
						icon: "ipgs-share-icon-twitter",
					},
					{
						type: "linkedin",
						active: !0,
						title: "linkedin",
						icon: "ipgs-share-icon-linkedin",
					},
					{
						type: "email",
						active: !0,
						title: "email",
						icon: "ipgs-share-icon-email",
					},
				],
				twoPageFlip: {},
				onePageFlip: {},
				onePageSwipe: { pageFade: !0 },
				onLoad: null,
				txtConfigFileFailedToLoad: "Failed to load a config file",
				txtFailedEngine: "Can not find the book engine module specified",
				txtPDFLoading: "Loading PDF document",
				txtPDFFailedToLoad: "Failed to load PDF document",
				txtShareDlgTitle: "Share",
			},
			defaultPage: { type: "image", image: null, page: 0 },
			touchMouseEvent: {
				down: "touchmousedown",
				up: "touchmouseup",
				move: "touchmousemove",
			},
			$body: null,
			util: null,
			_init: function (t, e) {
				if (
					((this.$body = v("body")),
					(this.$container = t),
					(this.config = e),
					(this.themeClass = e.bookTheme
						? "ipgs-theme-" + e.bookTheme.toLowerCase()
						: null),
					this._buildDOM(),
					this.config.pdfUrl && !this.config.pdfAutoLoad)
				) {
					var o = this;
					o.controls.$bookCover.addClass("ipgs-active"),
						o.controls.$bookCover.one("click", function (t) {
							o.controls.$stage.trigger("click");
						}),
						o.controls.$stage.one("click", function (t) {
							o._create();
						});
				} else this._create();
			},
			_create: function () {
				this.controls.$bookLoading.addClass("ipgs-active");
				var o = this;
				function i() {
					switch (
						(o.controls.$bookCover.removeClass("ipgs-active"),
						(o.pageWidth = o.config.pageWidth),
						(o.pageHeight = o.config.pageHeight),
						(o.bookHeight = o.config.pageHeight),
						(o.engineClass = "ipgs-" + o.config.bookEngine.toLowerCase()),
						(o.engine = null),
						o.engineClass)
					) {
						case "ipgs-twopageflip":
							(o.bookWidth = 2 * o.config.pageWidth),
								(o.engine = new a(o, v.extend(!0, {}, o.config.twoPageFlip)));
							break;
						case "ipgs-onepageflip":
							(o.bookWidth = o.config.pageWidth),
								(o.engine = new n(o, v.extend(!0, {}, o.config.onePageFlip)));
							break;
						case "ipgs-onepageswipe":
							(o.bookWidth = o.config.pageWidth),
								(o.engine = new r(o, v.extend(!0, {}, o.config.onePageSwipe)));
							break;
						default:
							return (
								console.error(
									o.config.txtFailedEngine + " [" + o.engineClass + "]"
								),
								void o._updateLoadingInfo(o.config.txtFailedEngine)
							);
					}
					o.controls.$book.css({ width: o.bookWidth, height: o.bookHeight }),
						o._initPages(),
						o._initThumbnails(),
						o._initBookmarks(),
						o._setZoom({ zoom: o.config.zoom }, !0, !0),
						o._updateSize(),
						o._updateBookEngine(),
						o._ready();
				}
				function t(t) {
					var e = new Image();
					(e.onload = function () {
						(o.config.pageWidth = parseInt(e.width, 10)),
							(o.config.pageHeight = parseInt(e.height, 10)),
							i();
					}),
						(e.onerror = function () {
							i();
						}),
						(e.src = t);
				}
				if (this.config.pdfUrl) {
					(PDFJS.disableAutoFetch = !0),
						(PDFJS.disableStream = !0),
						(PDFJS.disableRange = o.config.pdfDisableRangeRequests),
						(PDFJS.externalLinkTarget = PDFJS.LinkTarget.BLANK);
					var e = PDFJS.getDocument(this.config.pdfUrl);
					e.then(
						function (t) {
							(o.pdf = t),
								(o.pdfPageSize = P.SINGLE),
								(o.pdfPageCount = t.numPages),
								(o.pdfFirstPage = null),
								(o.pdfFirstPageViewport = null),
								(o.pdfFirstPageRatio = 0),
								(o.pdfPagesRefCache = null),
								(o.pdfAnnotationsRefCache = null),
								o.pdf.getPage(1).then(
									function (t) {
										(o.pdfFirstPage = t),
											(o.pdfFirstPageViewport = t.getViewport(1)),
											(o.pdfFirstPageRatio =
												o.pdfFirstPageViewport.width /
												o.pdfFirstPageViewport.height),
											(o.pdfPagesRefCache = Object.create(null)),
											(o.pdfAnnotationsRefCache = Object.create(null)),
											o.config.pageSizeAuto &&
												((o.config.pageWidth = parseInt(
													o.pdfFirstPageViewport.width,
													10
												)),
												(o.config.pageHeight = parseInt(
													o.pdfFirstPageViewport.height,
													10
												))),
											1 < o.pdf.numPages
												? o.pdf.getPage(2).then(function (t) {
														var e = t.getViewport(1);
														e.width / e.height > 1.5 * o.pdfFirstPageRatio &&
															((o.pdfPageSize = P.DOUBLE),
															(o.pdfPageCount = 2 * o.pdfPageCount - 2)),
															i();
												  })
												: i();
									},
									function () {
										i();
									}
								);
						},
						function (t) {
							console.error(t.message),
								o._updateLoadingInfo(o.config.txtPDFFailedToLoad);
						}
					),
						(e.onProgress = function (t) {
							var e = (100 * t.loaded) / t.total;
							isNaN(e)
								? t && t.loaded
									? o._updateLoadingInfo(
											o.config.txtPDFLoading +
												" " +
												(Math.ceil(t.loaded / 1e4) / 100).toString() +
												"Mb"
									  )
									: o._updateLoadingInfo(o.config.txtPDFLoading)
								: o._updateLoadingInfo(
										o.config.txtPDFLoading +
											" " +
											e.toString().split(".")[0] +
											"%"
								  );
						});
				} else if (this.config.pageSizeAuto) {
					var s = this.$container.find(".ipgs-pages > [data-image]");
					s.length
						? t(s.data("image"))
						: this.config.pageImagesUrl
						? t(
								this._replaceNumberTemplate(
									this.config.pageImagesUrl,
									this.config.pageImagesFirst
								)
						  )
						: this.config.pages.length &&
						  "image" == this.config.pages[0].type &&
						  this.config.pages[0].image
						? t(this.config.pages[0].image)
						: i();
				} else i();
			},
			_ready: function () {
				if (
					(console.log("IPAGES: version " + this.VERSION),
					this._bind(),
					this.$container.find(".ipgs-message").remove(),
					this.config.jsonFail)
				) {
					var t = v("<div>")
						.addClass("ipgs-message")
						.text(
							this.config.txtConfigFileFailedToLoad +
								' "' +
								this.config.jsonUrl +
								'"'
						);
					this.$container.append(t);
				}
				if (this.config.onLoad) {
					var e = null;
					if ("string" == typeof this.config.onLoad)
						try {
							e = new Function(this.config.onLoad);
						} catch (t) {
							console.error("Can not compile onLoad function: " + t.message);
						}
					else
						"function" == typeof this.config.onLoad && (e = this.config.onLoad);
					e && e.call(this);
				}
				this.controls.$bookCover.removeClass("ipgs-active"),
					this.controls.$book.addClass("ipgs-no-transition"),
					this.$container.addClass("ipgs-ready"),
					(this.ready = !0),
					this.$container.trigger("ipages:ready", [this]);
				var o = this;
				setTimeout(function () {
					o.controls.$book.removeClass("ipgs-no-transition");
				}, 1);
				var i = this.config.flipSound;
				(this.config.flipSound = !1),
					this._showPage(this.config.pageStart - 1),
					(this.config.flipSound = i),
					this.config.toolbar &&
						(this.config.autoEnableThumbnails && this._onToggleThumbnails(),
						this.config.autoEnableOutline && this._onToggleOutline(),
						this.config.autoEnableShare && this._onToggleShare());
			},
			_buildDOM: function () {
				this.$container
					.addClass("ipgs")
					.addClass(this.engineClass)
					.addClass(this.themeClass),
					this.$container.wrapInner(
						v("<div>").addClass("ipgs-pages").css("display", "none")
					),
					(this.controls.$placeholder = v("<div>")
						.addClass("ipgs-placeholder")
						.css({ display: "none" })),
					(this.controls.$stage = v("<div>")
						.addClass("ipgs-stage")
						.attr("tabindex", "1")),
					(this.controls.$audio = v("<audio preload></audio>").addClass(
						"ipgs-audio"
					)),
					(this.controls.$prevBtn = v("<div>").addClass("ipgs-prev-page")),
					(this.controls.$nextBtn = v("<div>").addClass("ipgs-next-page")),
					(this.controls.$stageMove = v("<div>").addClass("ipgs-stage-move")),
					(this.controls.$bookCover = v("<div>").addClass("ipgs-book-cover")),
					(this.controls.$bookLoading =
						v("<div>").addClass("ipgs-book-loading")),
					(this.controls.$bookLoadingInfo = v("<div>").addClass(
						"ipgs-book-loading-info"
					)),
					(this.controls.$bookTransform = v("<div>").addClass(
						"ipgs-book-transform"
					)),
					(this.controls.$bookWrap = v("<div>").addClass("ipgs-book-wrap")),
					(this.controls.$bookSize = v("<div>").addClass("ipgs-book-size")),
					(this.controls.$book = v("<div>")
						.addClass("ipgs-book")
						.css({ perspective: this.config.perspective })),
					this.config.flipSoundUrl &&
						this.controls.$audio.append(
							v('<source src="' + this.config.flipSoundUrl + '">')
						),
					this.config.pdfCoverImageUrl &&
						this.controls.$bookCover.append(
							v('<img src="' + this.config.pdfCoverImageUrl + '">')
						),
					this.controls.$bookSize.append(this.controls.$book),
					this.controls.$bookTransform.append(this.controls.$bookWrap),
					this.controls.$bookWrap.append(this.controls.$bookSize),
					this.controls.$stage.append(
						this.controls.$bookTransform,
						this.controls.$stageMove
					),
					this._updateStagePadding(this.config.padding),
					this.$container.append(this.controls.$stage, this.controls.$audio),
					this.config.prevnextButtons &&
						this.$container.append(
							this.controls.$prevBtn,
							this.controls.$nextBtn
						),
					this._buildToolbarDOM(),
					this.$container.append(
						this.controls.$bookCover,
						this.controls.$bookLoading,
						this.controls.$bookLoadingInfo
					),
					this.$container.is(":hidden") &&
						this.$container.css("display", "block");
			},
			_updateStagePadding: function (t) {
				"number" == typeof t
					? ((this.stagePadding.top = t),
					  (this.stagePadding.right = t),
					  (this.stagePadding.bottom = t),
					  (this.stagePadding.left = t))
					: ((this.stagePadding.top = t.hasOwnProperty("top") ? t.top : 0),
					  (this.stagePadding.right = t.hasOwnProperty("right") ? t.right : 0),
					  (this.stagePadding.bottom = t.hasOwnProperty("bottom")
							? t.bottom
							: 0),
					  (this.stagePadding.left = t.hasOwnProperty("left") ? t.left : 0));
			},
			_buildToolbarDOM: function () {
				if (this.config.toolbar) {
					(this.controls.$toolbar = v("<div>").addClass("ipgs-toolbar")),
						(this.controls.toolbar = {});
					for (var t = [], e = 0; e < this.config.toolbarControls.length; e++) {
						var o = this.config.toolbarControls[e],
							i = v("<i></i>").addClass(o.icon),
							s = v("<div>")
								.addClass("ipgs-control")
								.addClass("ipgs-control-" + o.type)
								.addClass(o.active ? "" : "ipgs-hidden")
								.attr("title", o.title)
								.append(i);
						switch (
							(s.on("click", v.proxy(this._onToolbarControlClick, this)),
							o.type)
						) {
							case "gotofirst":
								(this.controls.toolbar.$gotofirst = s).on(
									"click",
									v.proxy(this._onPageFirst, this)
								);
								break;
							case "prev":
								(this.controls.toolbar.$prev = s).on(
									"click",
									v.proxy(this._onPagePrev, this)
								);
								break;
							case "pagenumber":
								(this.controls.toolbar.$pagenumber = s),
									this.controls.toolbar.$pagenumber.empty(),
									(this.controls.toolbar.$pagenumberLabel = v(
										"<span></span>"
									).addClass("ipgs-pagenumber-label")),
									(this.controls.toolbar.$pagenumberInput = v("<input>")
										.addClass("ipgs-pagenumber-input")
										.attr("type", "text")),
									this.controls.toolbar.$pagenumberLabel.on(
										"click",
										v.proxy(this._onPageNumberLabelClick, this)
									),
									this.controls.toolbar.$pagenumberInput.on(
										"click",
										v.proxy(this._onPageNumberInputClick, this)
									),
									this.controls.toolbar.$pagenumberInput.on(
										"keyup",
										v.proxy(this._onPageNumberInputKeyup, this)
									),
									this.controls.toolbar.$pagenumber.append(
										this.controls.toolbar.$pagenumberLabel,
										this.controls.toolbar.$pagenumberInput
									);
								break;
							case "next":
								(this.controls.toolbar.$next = s).on(
									"click",
									v.proxy(this._onPageNext, this)
								);
								break;
							case "gotolast":
								(this.controls.toolbar.$gotolast = s).on(
									"click",
									v.proxy(this._onPageLast, this)
								);
								break;
							case "outline":
								(this.controls.$outline = v("<div>").addClass("ipgs-outline")),
									(this.controls.$outlineToggle = v("<div>").addClass(
										"ipgs-outline-toggle"
									)),
									this.$container.append(
										this.controls.$outline.append(this.controls.$outlineToggle)
									),
									this.controls.$outline.on(
										"click",
										".ipgs-bookmark",
										v.proxy(this._onBookmarkClick, this)
									),
									(this.controls.toolbar.$outline = s).on(
										"click",
										v.proxy(this._onToggleOutline, this)
									),
									this.controls.$outlineToggle.on(
										"click",
										v.proxy(this._onToggleOutline, this)
									);
								break;
							case "thumbnails":
								(this.controls.$thumbnails =
									v("<div>").addClass("ipgs-thumbnails")),
									(this.controls.$thumbnailsToggle = v("<div>").addClass(
										"ipgs-thumbnails-toggle"
									)),
									(this.controls.$thumbsWrap =
										v("<div>").addClass("ipgs-thumbs-wrap")),
									this.controls.$thumbnails.append(
										this.controls.$thumbnailsToggle,
										this.controls.$thumbsWrap
									),
									this.$container.append(this.controls.$thumbnails),
									this.controls.$thumbnails.on(
										"click",
										".ipgs-thumb",
										v.proxy(this._onThumbClick, this)
									),
									(this.controls.toolbar.$thumbnails = s).on(
										"click",
										v.proxy(this._onToggleThumbnails, this)
									),
									this.controls.$thumbnailsToggle.on(
										"click",
										v.proxy(this._onToggleThumbnails, this)
									),
									this.controls.$thumbsWrap.on(
										"scroll",
										v.proxy(this._onThumbnailsScroll, this)
									);
								break;
							case "zoom-in":
								(this.controls.toolbar.$zoomin = s).on(
									"mousedown touchstart",
									v.proxy(this._onZoomIn, this)
								);
								break;
							case "zoom-out":
								(this.controls.toolbar.$zoomout = s).on(
									"mousedown touchstart",
									v.proxy(this._onZoomOut, this)
								);
								break;
							case "zoom-default":
								(this.controls.toolbar.$zoomdefault = s).on(
									"click",
									v.proxy(this._onZoomDefault, this)
								);
								break;
							case "fullscreen":
								(this.controls.toolbar.$fullscreen = s).on(
									"click",
									v.proxy(this._onToggleFullscreen, this)
								);
								break;
							case "share":
								(this.controls.$share = v("<div>").addClass("ipgs-share")),
									(this.controls.$shareDialog =
										v("<div>").addClass("ipgs-share-dialog")),
									(this.controls.$shareHeader = v("<div>")
										.addClass("ipgs-share-header")
										.html(this.config.txtShareDlgTitle)),
									(this.controls.$shareControls = v("<div>").addClass(
										"ipgs-share-controls"
									));
								for (var a = 0; a < this.config.shareControls.length; a++) {
									var n = this.config.shareControls[a];
									if (n.active) {
										var r = v("<i></i>").addClass(n.icon),
											h = v("<div>")
												.addClass("ipgs-share-control-" + o.type)
												.attr("title", n.title)
												.append(r);
										this.controls.$shareControls.append(h),
											h.on("click", v.proxy(this._onShareClick, this, n.type));
									}
								}
								this.controls.$shareDialog.append(
									this.controls.$shareHeader,
									this.controls.$shareControls
								),
									this.controls.$share.append(this.controls.$shareDialog),
									this.$container.append(this.controls.$share),
									this.controls.$share.on(
										"click",
										v.proxy(this._onToggleShare, this)
									),
									(this.controls.toolbar.$share = s).on(
										"click",
										v.proxy(this._onToggleShare, this)
									);
								break;
							case "download":
								(this.controls.toolbar.$download = s).on(
									"click",
									v.proxy(this._onDownload, this)
								);
								break;
							case "sound":
								(this.controls.toolbar.$sound = s),
									this.controls.toolbar.$sound.toggleClass(
										"ipgs-disable",
										!this.config.flipSound
									),
									s.on("click", v.proxy(this._onToggleSound, this));
						}
						t.push(s);
					}
					for (e = 0; e < t.length; e++) this.controls.$toolbar.append(t[e]);
					this.$container.append(this.controls.$toolbar);
				}
			},
			_bind: function () {
				this.controls.$stage.on(
					"click",
					".ipgs-annotation",
					v.proxy(this._onAnnotationClick, this)
				),
					"ontouchstart" in p &&
						this.config.touchNavigation &&
						(this.controls.$stage.on(
							"touchstart",
							v.proxy(this._onBookTouch, this)
						),
						this.controls.$stage.on(
							"touchmove",
							v.proxy(this._onBookTouch, this)
						),
						this.controls.$stage.on(
							"touchend",
							v.proxy(this._onBookTouch, this)
						)),
					this.config.mouseDragNavigation &&
						this.controls.$stage.on(
							"mousedown",
							v.proxy(this._onBookMouse, this)
						),
					this.controls.$stage.on(
						this.touchMouseEvent.down,
						v.proxy(this._onSwipeDown, this)
					),
					this.controls.$stage.on(
						this.touchMouseEvent.move,
						v.proxy(this._onSwipeMove, this)
					),
					this.controls.$stage.on(
						this.touchMouseEvent.up,
						v.proxy(this._onSwipeUp, this)
					),
					this.config.mousePageClickNavigation &&
						this.controls.$stage.on(
							"click",
							v.proxy(this._onBookMouseClick, this)
						),
					this.config.mouseWheelNavigation &&
						this.controls.$stage.on(
							"mousewheel",
							v.proxy(this._onMouseWheelNavigation, this)
						),
					this.config.keyboardNavigation &&
						this.controls.$stage.on(
							"keydown",
							v.proxy(this._onKeyboardNavigation, this)
						),
					this.config.dblClickZoomDefault &&
						(this.controls.$stage.on(
							"dblclick",
							v.proxy(this._onDblClickZoomDefault, this)
						),
						this.controls.$stage.on(
							"touchstart",
							v.proxy(this._onDblTapZoomDefault, this)
						)),
					this.config.mouseWheelZoom &&
						this.controls.$stage.on(
							"mousewheel",
							v.proxy(this._onMouseWheelZoom, this)
						),
					this.config.keyboardZoom &&
						this.controls.$stage.on(
							"keydown",
							v.proxy(this._onKeyboardZoom, this)
						),
					this.config.pinchZoom &&
						(this.controls.$stage.on(
							"touchstart",
							v.proxy(this._onPinchZoomTouchStart, this)
						),
						this.controls.$stage.on(
							"touchend",
							v.proxy(this._onPinchZoomTouchEnd, this)
						)),
					this.config.prevnextButtons &&
						(this.controls.$prevBtn.on(
							"click",
							v.proxy(this._onPrevBtnClick, this)
						),
						this.controls.$nextBtn.on(
							"click",
							v.proxy(this._onNextBtnClick, this)
						)),
					(this.config.bookEngineLandscape || this.config.bookEnginePortrait) &&
						v(p).on(
							"orientationchange",
							v.proxy(this._onOrientationChange, this)
						),
					v(p).on("resize", v.proxy(this._onResize, this)),
					v(p).on("scrollbar", v.proxy(this._onScrollbar, this)),
					this.$container.on(
						"fullscreenchange mozfullscreenchange webkitfullscreenchange msfullscreenchange",
						v.proxy(this._onFullScreenChange, this)
					),
					this.$container.on(
						"mouseup touchend",
						v.proxy(this._onClearTimeout, this)
					);
			},
			_unbind: function () {
				this.controls.$stage.off(
					"click",
					".ipgs-annotation",
					v.proxy(this._onAnnotationClick, this)
				),
					this.controls.$stage.off(
						"touchstart",
						v.proxy(this._onBookTouch, this)
					),
					this.controls.$stage.off(
						"touchmove",
						v.proxy(this._onBookTouch, this)
					),
					this.controls.$stage.off(
						"touchend",
						v.proxy(this._onBookTouch, this)
					),
					this.controls.$stage.off(
						"mousedown",
						v.proxy(this._onBookMouse, this)
					),
					this.controls.$stage.off(
						this.touchMouseEvent.down,
						v.proxy(this._onSwipeDown, this)
					),
					this.controls.$stage.off(
						this.touchMouseEvent.move,
						v.proxy(this._onSwipeMove, this)
					),
					this.controls.$stage.off(
						this.touchMouseEvent.up,
						v.proxy(this._onSwipeUp, this)
					),
					this.controls.$stage.off(
						"click",
						v.proxy(this._onBookMouseClick, this)
					),
					this.controls.$stage.off(
						"mousewheel",
						v.proxy(this._onMouseWheelNavigation, this)
					),
					this.controls.$stage.off(
						"keydown",
						v.proxy(this._onKeyboardNavigation, this)
					),
					this.controls.$stage.off(
						"dblclick",
						v.proxy(this._onDblClickZoomDefault, this)
					),
					this.controls.$stage.off(
						"mousewheel",
						v.proxy(this._onMouseWheelZoom, this)
					),
					this.controls.$stage.off(
						"keydown",
						v.proxy(this._onKeyboardZoom, this)
					),
					this.controls.$stage.off(
						"touchstart",
						v.proxy(this._onPinchZoomTouchStart, this)
					),
					this.controls.$stage.off(
						"touchend",
						v.proxy(this._onPinchZoomTouchEnd, this)
					),
					this.controls.$prevBtn.off(
						"click",
						v.proxy(this._onPrevBtnClick, this)
					),
					this.controls.$nextBtn.off(
						"click",
						v.proxy(this._onNextBtnClick, this)
					),
					v(p).off(
						"orientationchange",
						v.proxy(this._onOrientationChange, this)
					),
					v(p).off("resize", v.proxy(this._onResize, this)),
					v(p).off("scrollbar", v.proxy(this._onScrollbar, this)),
					this.$container.off(
						"fullscreenchange mozfullscreenchange webkitfullscreenchange msfullscreenchange",
						v.proxy(this._onFullScreenChange, this)
					),
					this.$container.off(
						"mouseup touchend",
						v.proxy(this._onClearTimeout, this)
					);
			},
			_replaceNumberTemplate: function (t, s) {
				if (t) {
					return (
						(s = "" + s),
						t.replace(/\{\{(x+)\}\}/g, function (t, e) {
							if (e.length > s.length) {
								for (var o = "", i = 0; i < e.length; i++) o += "0";
								return (o + s).slice(-o.length);
							}
							return s;
						})
					);
				}
				return t;
			},
			_createBlob: function (t, e) {
				return new Blob([t], { type: e });
			},
			_createObjectURL: function (t, e) {
				var o = this._createBlob(t, e);
				return URL.createObjectURL(o);
			},
			_initThumbnails: function () {
				if (this.controls.$thumbnails)
					for (
						var t = this.pageHeight / this.pageWidth,
							e = 0.8 * this.controls.$thumbnails.outerWidth(),
							o = t * e,
							i = 0;
						i < this.pages.length;
						i++
					) {
						var s = this.pages[i],
							a = v("<div>").addClass("ipgs-preloader"),
							n = v("<div>")
								.addClass("ipgs-number")
								.text(i + 1),
							r = v("<div>")
								.css({ width: e + "px", height: o + "px" })
								.addClass("ipgs-thumb")
								.addClass("ipgs-loading")
								.attr("data-page-index", i)
								.appendTo(this.controls.$thumbsWrap)
								.append(a, n);
						(r.$number = n),
							(r.thumbLoading = !1),
							(r.thumbLoaded = !1),
							(r.image = s.image),
							(r.pdfPage = s.pdfPage),
							(s.$thumb = r);
					}
			},
			_addBookmarks: function (t, e) {
				if (e && 0 < e.length) {
					var o = v("<div>").addClass("ipgs-bookmarks").appendTo(t);
					t.hasClass("ipgs-bookmarks-wrap") || t.addClass("ipgs-has-childs");
					for (var i = 0; i < e.length; i++) {
						var s = e[i],
							a = this.bookmarksMap.size,
							n = v("<div>").addClass("ipgs-state"),
							r = v("<div>").addClass("ipgs-link").html(s.text),
							h = v("<div>").addClass("ipgs-bookmark"),
							l = (s.target && s.target, 0 != s.folded);
						this.bookmarksMap.set(a, s),
							h.attr("data-id", a).toggleClass("ipgs-folded", l),
							h.append(n, r).appendTo(o),
							this._addBookmarks(h, s.bookmarks);
					}
				}
			},
			_initBookmarks: function () {
				if (this.controls.$outline) {
					var o = v("<div>").addClass("ipgs-bookmarks-wrap");
					if ((this.controls.$outline.append(o), this.pdf)) {
						var i = this;
						this.pdf.getOutline().then(function (t) {
							var e = [];
							!(function t(e, o) {
								if (e)
									for (var i = 0; i < e.length; i++) {
										var s = e[i];
										if (s.dest instanceof Array) {
											var a = {};
											(a.text = s.title.replace(/\x00/g, "")),
												(a.dest = s.dest),
												s.items.length &&
													((a.bookmarks = []), t(s.items, a.bookmarks)),
												o.push(a);
										}
									}
							})(t, e),
								(i.config.bookmarks = e.concat(i.config.bookmarks)),
								i._addBookmarks(o, i.config.bookmarks);
						});
					} else this._addBookmarks(o, this.config.bookmarks);
				}
			},
			_initPages: function () {
				for (
					var t = this.$container.find(".ipgs-pages"),
						e = t.children(),
						o = 0,
						i = e.length;
					o < i;
					o++
				)
					v(e[o]).hasClass("ipgs-stage") ||
						v(e[o]).hasClass("ipgs-toolbar") ||
						this._addPage(e[o]);
				if ((t.remove(), this.config.pdfAutoCreatePages && this.pdf))
					for (o = 0; o < this.pdfPageCount; o++) {
						var s = v("<div>").attr({
							"data-type": "dynamic",
							"data-pdf-page": o + 1,
						});
						this._addPage(s);
					}
				if (this.config.pageImagesUrl)
					for (o = 0; o < this.config.pageImagesCount; o++) {
						var a = this._replaceNumberTemplate(
							this.config.pageImagesUrl,
							this.config.pageImagesFirst + o
						);
						s = v("<div>").attr({ "data-type": "dynamic", "data-image": a });
						this._addPage(s);
					}
				function n(t, e) {
					if (e.layers && 0 < e.layers.length) {
						var o = v("<div>").addClass("ipgs-layers");
						(t.$layers = o), t.$front.append(o);
						for (var i = 0; i < e.layers.length; i++) {
							var s = e.layers[i],
								a = v("<div>")
									.addClass("ipgs-layer")
									.attr("data-layer-id", s.id)
									.addClass(s.class);
							if (("text" == s.type && a.text(s.text), s.link)) {
								var n = v("<a>").attr({
									href: s.link,
									title: "",
									target: s.linkNewWindow ? "_blank" : "_self",
								});
								a.append(n);
							}
							o.append(a);
						}
					}
				}
				for (o = 0; o < this.config.pages.length; o++) {
					var r = this.config.pages[o];
					if ("pdf" == r.type) {
						s = v("<div>").attr({
							"data-type": "dynamic",
							"data-pdf-page": r.page,
						});
						r.showCSSClass && s.attr("data-showcssclass", r.showCSSClass),
							r.hideCSSClass && s.attr("data-hidecssclass", r.hideCSSClass),
							n((s = this._addPage(s)), r);
					} else if ("image" == r.type) {
						s = v("<div>").attr({
							"data-type": "dynamic",
							"data-image": r.image,
						});
						r.showCSSClass && s.attr("data-showcssclass", r.showCSSClass),
							r.hideCSSClass && s.attr("data-hidecssclass", r.hideCSSClass),
							n((s = this._addPage(s)), r);
					}
				}
				0 < this.pages.length &&
					(this.pages[0].addClass("ipgs-first"),
					this.pages[this.pages.length - 1].addClass("ipgs-last"));
				for (o = 0; o < this.pages.length; o++)
					this.pages[o].attr("data-page-number", o + 1);
				this._updateBook(!1);
			},
			_addPage: function (t) {
				var e = v(t),
					o = v("<div>").addClass("ipgs-image"),
					i = v("<div>").addClass("ipgs-preloader"),
					s = v("<div>").addClass("ipgs-number"),
					a = v("<div>").addClass("ipgs-front"),
					n = v("<div>").addClass("ipgs-extra"),
					r = v("<div>").addClass("ipgs-shadow"),
					h = v("<div>")
						.css({
							display: "none",
							width: this.pageWidth + "px",
							height: this.pageHeight + "px",
						})
						.addClass("ipgs-page")
						.addClass("ipgs-loading")
						.appendTo(this.controls.$book)
						.append(o, a, n.append(s, i), r);
				return (
					(h.$image = o),
					(h.$front = a),
					(h.$extra = n),
					(h.$number = s),
					(h.$preloader = i),
					(h.$shadow = r),
					(h.$thumb = null),
					(h.pageLoading = !1),
					(h.pageLoaded = !1),
					(h.zoom = this._getZoom()),
					(h.image = e.data("image")),
					(h.pdfPage = e.data("pdf-page")),
					(h.showCSSClass = e.data("showcssclass")),
					(h.hideCSSClass = e.data("hidecssclass")),
					(h.isAnnotations = !1),
					a.append(e),
					this.pages.push(h),
					h
				);
			},
			_updateLoadingInfo: function (t) {
				this.controls.$bookLoadingInfo.text(t).addClass("ipgs-active");
			},
			_updateBook: function (t) {
				for (var e = 0, o = this.pages.length; e < o; e++) {
					var i = this.pages[e];
					if (
						((i.pageIndex = e),
						(i.pageNumber = this.config.pageNumbersFirst + e),
						this.config.pageNumbers)
					) {
						var s = e + 1,
							a = e - this.pages.length;
						-1 == v.inArray(s, this.config.pageNumbersHidden) &&
						-1 == v.inArray(a, this.config.pageNumbersHidden)
							? i.$number.addClass("ipgs-show").text(i.pageNumber)
							: i.$number.removeClass("ipgs-show").text("");
					}
				}
				this.engine.updateBook(t);
			},
			_updateSize: function () {
				var t = this._getZoom(),
					e = this.bookWidth,
					o = this.bookHeight,
					i = this.stagePadding.top,
					s = this.stagePadding.bottom,
					a = this.stagePadding.left,
					n = this.stagePadding.right,
					r = this.controls.$stage.outerWidth() - a - n;
				if (this.config.autoHeight) {
					var h = (u = o / e) * (!this.config.autoFit && e < r ? e : r) + i + s;
					this.$container.css({ height: h });
				}
				var l,
					g,
					p,
					c,
					d = this.controls.$stage.outerHeight() - i - s,
					u = 1;
				((d = d <= 0 ? o : d),
				this.config.responsive && !this.config.autoFit) &&
					(r < e || d < o) &&
					(u = (c = d / o) < (p = r / e) ? c : p);
				this.config.autoFit && (u = (c = d / o) < (p = r / e) ? c : p);
				(l = (d - o * u) / 2),
					(g = (r - e * u) / 2),
					this.controls.$bookTransform.css({
						top: l + i + "px",
						left: g + a + "px",
					}),
					this.controls.$bookWrap.css({
						width: e * u + "px",
						height: o * u + "px",
					}),
					this.controls.$bookWrap.get(0).offsetHeight,
					this.controls.$bookSize.css({
						transform: "scale(" + (1 / t) * u + ")",
					}),
					this._updateThumbnails(),
					this.engine.updateBookLayout();
			},
			_updateBookEngine: function () {
				if (this.config.bookEngineLandscape && this.config.bookEnginePortrait) {
					var t = this.config.bookEngineLandscape,
						e = this.config.bookEnginePortrait,
						o = this.stagePadding.top,
						i = this.stagePadding.bottom,
						s = this.stagePadding.left,
						a = this.stagePadding.right;
					(this.controls.$stage.outerWidth() - s - a) /
						(this.controls.$stage.outerHeight() - o - i) >=
					this.config.ratioPortraitToLandscape
						? (this.$container
								.addClass("ipgs-landscape")
								.removeClass("ipgs-portrait"),
						  this.setBookEngine(t))
						: (this.$container
								.addClass("ipgs-portrait")
								.removeClass("ipgs-landscape"),
						  this.setBookEngine(e));
				}
			},
			_updateThumbnails: function () {
				this.controls.$thumbnails && this._onThumbnailsRefresh();
			},
			_updateZoomPosition: function () {
				var t = this._getZoom();
				1 == t && this._setPosition({ x: 0, y: 0 }, !1);
				var e = this._getPosition();
				this.controls.$bookTransform.css({
					transform:
						"translate3d(" + e.x + "px," + e.y + "px, 0) scale(" + t + ")",
				}),
					this.controls.$book.addClass("ipgs-no-transition"),
					this.controls.$book.css({
						width: this.bookWidth * t + "px",
						height: this.bookHeight * t + "px",
					});
				for (var o = 0; o < this.pages.length; o++) {
					var i = this.pages[o];
					i.css({
						width: this.pageWidth * t + "px",
						height: this.pageHeight * t + "px",
					}),
						i.$front.css({
							width: this.pageWidth + "px",
							height: this.pageHeight + "px",
							transform: "scale(" + t + ")",
						}),
						i.$extra.css({
							width: this.pageWidth + "px",
							height: this.pageHeight + "px",
							transform: "scale(" + t + ")",
						}),
						i.hasClass("ipgs-show") && this._loadPageData(i.pageIndex);
				}
				this._updateSize();
				var s = this;
				clearTimeout(s.bookTransitionTimerId),
					(s.bookTransitionTimerId = setTimeout(function () {
						s.controls.$book.removeClass("ipgs-no-transition");
					}, 300));
			},
			_getPosition: function () {
				return { x: this.matrix.m[4], y: this.matrix.m[5] };
			},
			_setPosition: function (t, e) {
				var o = t.x || 0,
					i = t.y || 0;
				(this.matrix.m[4] = o),
					(this.matrix.m[5] = i),
					e && this._updateZoomPosition();
			},
			_setDeltaPosition: function (t) {
				var e = t.dx || 0,
					o = t.dy || 0,
					i = this.matrix.inverse().transformPoint(e, o),
					s = this.matrix.inverse().transformPoint(0, 0),
					a = i[0] - s[0],
					n = i[1] - s[1];
				this.matrix.translate(a, n), this._updateZoomPosition();
			},
			_getZoom: function () {
				return this.matrix.m[0];
			},
			_setZoom: function (t, e, o) {
				var i = t.zoom || 1e-6;
				if (
					(null != this.config.zoomMin &&
						(i = Math.max(this.config.zoomMin, i)),
					null != this.config.zoomMax && (i = Math.min(this.config.zoomMax, i)),
					o || i != this._getZoom())
				) {
					var s = this.matrix.m[4],
						a = this.matrix.m[5];
					this.matrix.reset().translate(s, a).scale(i, i),
						e && this._updateZoomPosition();
				}
			},
			_setDeltaZoom: function (t) {
				var e = t.zoom || 1,
					o = t.focalPoint || { x: this.matrix.m[4], y: this.matrix.m[5] };
				this.config.zoomFocal ||
					(o = { x: this.matrix.m[4], y: this.matrix.m[5] });
				var i = this.matrix.m[0] * e;
				null != this.config.zoomMin && i < this.config.zoomMin
					? (e = this.config.zoomMin / this.matrix.m[0])
					: null != this.config.zoomMax &&
					  i > this.config.zoomMax &&
					  (e = this.config.zoomMax / this.matrix.m[0]);
				var s = this.matrix.inverse().transformPoint(o.x, o.y),
					a = s[0],
					n = s[1];
				this.matrix.translate(a, n).scale(e, e).translate(-a, -n),
					this._updateZoomPosition();
			},
			_zoomIn: function () {
				var t = this._getZoom() + this.config.zoomStep;
				this._setZoom({ zoom: t }, !0, !1);
			},
			_zoomOut: function () {
				var t = this._getZoom() - this.config.zoomStep;
				this._setZoom({ zoom: t }, !0, !1);
			},
			_setBackgroundImage: function (t, e) {
				if (t.$image)
					if (e) {
						t.get(0).style.backgroundImage = "url(" + e + ")";
						var o = new Image();
						(o.onload = function () {
							clearTimeout(t.updateTimerId),
								(t.updateTimerId = setTimeout(function () {
									t.$image.get(0).style.backgroundImage = "url(" + e + ")";
								}, 500));
						}),
							(o.src = e);
					} else
						(t.get(0).style.backgroundImage = "none"),
							(t.$image.get(0).style.backgroundImage = "none");
				else t.css({ "background-image": e ? "url(" + e + ")" : "none" });
				(t.pageLoading = !1),
					(t.pageLoaded = !0),
					t.toggleClass("ipgs-loading", !t.pageLoaded);
			},
			_loadPageData: function (t) {
				if (null != t) {
					var f = this.pages[t];
					if (
						(f.pdfPage &&
							f.zoom != this._getZoom() &&
							((f.zoom = this._getZoom()),
							(f.pageLoaded = !1),
							(f.pageLoading = !1)),
						!f.pageLoaded && !f.pageLoading)
					) {
						f.pageLoading = !0;
						var m = this;
						if (f.image) {
							var e = new Image();
							(e.onload = function () {
								m._setBackgroundImage(f, this.src),
									!f.$thumb ||
										f.$thumb.pageLoaded ||
										f.$thumb.pageLoading ||
										m._setBackgroundImage(f.$thumb, this.src);
							}),
								(e.src = f.image);
						} else
							f.pdfPage
								? m.pdf &&
								  (clearTimeout(f.updateTimerId),
								  (f.updateTimerId = setTimeout(
										function () {
											var t = f.pdfPage;
											m.pdfPageSize == P.DOUBLE &&
												2 < t &&
												(t = Math.ceil((t - 1) / 2) + 1),
												m.pdf.getPage(t).then(function (d) {
													var t = p.devicePixelRatio || 1,
														e = m.controls.$book.get(0).getBoundingClientRect(),
														o =
															"twopageflip" == m.engine.name.toLowerCase()
																? e.width / 2
																: e.width,
														i = e.height,
														s =
															m.pdfPageSize == P.DOUBLE &&
															1 < f.pdfPage &&
															f.pdfPage < m.pdfPageCount,
														a = d.getViewport(1),
														n =
															o /
															(m.pdfPageSize == P.DOUBLE
																? m.pdfFirstPageViewport.width
																: a.width),
														r =
															i /
															(m.pdfPageSize == P.DOUBLE
																? m.pdfFirstPageViewport.height
																: a.height),
														u = d.getViewport(i < o ? r : n),
														h = b.createElement("canvas"),
														l = h.getContext("2d");
													(h.width = o * t),
														(h.height = i * t),
														s &&
															f.pdfPage % 2 == 1 &&
															(u.transform[4] = -h.width);
													var g = {
														canvasContext: l,
														viewport: u,
														transform: [t, 0, 0, t, 0, 0],
													};
													(f.renderTask = d.render(g)),
														f.renderTask.then(function () {
															h.toBlob(
																function (t) {
																	var e = m._createObjectURL(t, "image/jpeg");
																	m._setBackgroundImage(f, e),
																		f.$thumb && m._loadThumbData(f.$thumb),
																		(h = null);
																},
																"image/jpeg",
																0.9
															),
																(g = null);
														}),
														f.isAnnotations ||
															((f.isAnnotations = !0),
															d.getAnnotations().then(function (t) {
																var e = v("<div>").addClass("ipgs-annotations");
																m.pdfPageSize == P.DOUBLE &&
																	1 < f.pdfPage &&
																	f.pdfPage % 2 == 1 &&
																	e.css({ left: "-100%" }),
																	(u = u.clone({ dontFlip: !0 }));
																for (var o = 2, i = 0; i < t.length; i++) {
																	var s = t[i];
																	if (
																		s.annotationType == o &&
																		"Link" == s.subtype
																	) {
																		var a = s.rect,
																			n = d.view,
																			r =
																				"matrix(" +
																				(r = u.transform).join(",") +
																				")",
																			h = -a[0] + "px " + -a[1] + "px";
																		a = PDFJS.Util.normalizeRect([
																			a[0],
																			n[3] - a[1] + n[1],
																			a[2],
																			n[3] - a[3] + n[1],
																		]);
																		var l = v("<div>")
																				.addClass("ipgs-annotation")
																				.attr({ "data-annotation-id": s.id })
																				.css({
																					transform: r,
																					"transform-origin": h,
																					left: a[0] + "px",
																					top: a[1] + "px",
																					width: a[2] - a[0] + "px",
																					height: a[3] - a[1] + "px",
																				}),
																			g = v("<a>").attr({
																				href: s.url,
																				title: "",
																			});
																		e.append(l.append(g));
																		var p = s.id,
																			c = {
																				dest: s.dest,
																				url: s.url,
																				unsafeUrl: s.unsafeUrl,
																			};
																		m.pdfAnnotationsRefCache[p] = c;
																	}
																}
																e.children().length &&
																	(f.$layers
																		? f.$layers.before(e)
																		: f.$front.append(e));
															}));
												});
										},
										f.updateTimerId ? 300 : 1
								  )))
								: (m._setBackgroundImage(f, ""),
								  !f.$thumb ||
										f.$thumb.pageLoaded ||
										f.$thumb.pageLoading ||
										m._setBackgroundImage(f.$thumb, ""));
					}
				}
			},
			_loadThumbData: function (n) {
				if (!n.pageLoaded && !n.pageLoading) {
					n.pageLoading = !0;
					var r = this;
					if (n.image) {
						var t = new Image();
						(t.onload = function () {
							r._setBackgroundImage(n, this.src);
						}),
							(t.src = n.image);
					} else if (n.pdfPage) {
						if (r.pdf) {
							var e = n.pdfPage;
							2 < e &&
								r.pdfPageSize == P.DOUBLE &&
								(e = Math.ceil((e - 1) / 2) + 1),
								r.pdf.getPage(e).then(function (t) {
									var e =
											r.pdfPageSize == P.DOUBLE &&
											1 < n.pdfPage &&
											n.pdfPage < r.pdfPageCount,
										o = t.getViewport(
											n.width() / (t.getViewport(1).width / (e ? 2 : 1))
										),
										i = b.createElement("canvas"),
										s = i.getContext("2d");
									(i.width = Math.round(n.width())),
										(i.height = Math.round(n.height())),
										e && n.pdfPage % 2 == 1 && (o.transform[4] = -i.width);
									var a = { canvasContext: s, viewport: o };
									t.render(a).then(function () {
										i.toBlob(
											function (t) {
												var e = r._createObjectURL(t, "image/jpeg");
												r._setBackgroundImage(n, e), (i = null);
											},
											"image/jpeg",
											0.9
										),
											(a = null);
									});
								});
						}
					} else r._setBackgroundImage(n, "");
				}
			},
			_showPage: function (t) {
				0 != this.pages.length && this.engine.showPage(t);
			},
			_gotoPage: function (t) {
				0 != this.pages.length && this.engine.gotoPage(t);
			},
			_gotoPrev: function () {
				this.engine.gotoPrev();
			},
			_gotoNext: function () {
				this.engine.gotoNext();
			},
			_setShowHidePageState: function (t, e) {
				var o = this.pages[t];
				e
					? o.hasClass("ipgs-hide") &&
					  (o.removeClass("ipgs-hide"),
					  o.get(0).offsetHeight,
					  o.addClass("ipgs-show"),
					  o
							.removeClass(o.hideCSSClass ? o.hideCSSClass : "")
							.addClass(o.showCSSClass),
					  this._loadPageData(t),
					  this.$container.trigger("ipages:showpage", [this, t]))
					: o.hasClass("ipgs-show") &&
					  (o.removeClass("ipgs-show"),
					  o.get(0).offsetHeight,
					  o.addClass("ipgs-hide"),
					  o
							.removeClass(o.showCSSClass ? o.showCSSClass : "")
							.addClass(o.hideCSSClass),
					  this.$container.trigger("ipages:hidepage", [this, t])),
					this.config.prevnextButtons &&
						0 < this.pages.length &&
						(this.controls.$prevBtn.toggleClass(
							"ipgs-active",
							!this.pages[0].hasClass("ipgs-show")
						),
						this.controls.$nextBtn.toggleClass(
							"ipgs-active",
							!this.pages[this.pages.length - 1].hasClass("ipgs-show")
						));
			},
			_normalizeEvent: function (t, e, o, i) {
				return v.Event(t, { pageX: o, pageY: i, originalEvent: e });
			},
			_onShowPage: function (t) {
				if (this.config.flipSound && this.pageIndexPrev != t) {
					var e = this.controls.$audio.get(0);
					e.pause(), (e.currentTime = 0), e.play();
				}
				if (this.config.toolbar)
					if ("ipgs-twopageflip" == this.engineClass) {
						var o,
							i = 0;
						(o =
							1 <
								(i =
									(t + 1) % 2 == 0 || t + 1 == 1 || t + 1 == this.pages.length
										? t + 1
										: t) && i < this.pages.length
								? "-" + (i + 1)
								: ""),
							this.controls.toolbar.$pagenumberLabel.text(
								i + o + "/" + this.pages.length
							);
					} else
						this.controls.toolbar.$pagenumberLabel.text(
							t + 1 + "/" + this.pages.length
						);
				this.pageIndexPrev = t;
			},
			_onResize: function () {
				if (this.ready) {
					for (var t = 0; t < this.pages.length; t++) {
						var e = this.pages[t];
						(e.pageLoaded = !1), (e.pageLoading = !1);
					}
					this._updateZoomPosition(), this._updateBookEngine();
				}
			},
			_onScrollbar: function (t, e) {
				e && this.ready && (this._updateSize(), this._updateBookEngine());
			},
			_onOrientationChange: function () {
				this._updateBookEngine();
			},
			_onBookTouch: function (t) {
				if (!v(t.target).is("a")) {
					var e;
					switch (t.type) {
						case "touchstart":
							e = this.touchMouseEvent.down;
							break;
						case "touchend":
							e = this.touchMouseEvent.up;
							break;
						case "touchmove":
							t.preventDefault(),
								t.stopPropagation(),
								(e = this.touchMouseEvent.move);
							break;
						default:
							return;
					}
					var o,
						i = t.originalEvent.touches[0];
					(o =
						e == this.touchMouseEvent.up
							? this._normalizeEvent(e, t, null, null)
							: this._normalizeEvent(e, t, i.pageX, i.pageY)),
						v(t.target).trigger(o);
				}
			},
			_onBookMouse: function (t) {
				if (!v(t.target).is("a")) {
					t.preventDefault(), t.stopPropagation();
					var e,
						o = !1;
					switch (t.type) {
						case "mousedown":
							(e = this.touchMouseEvent.down),
								(this.dragNavigation.target = t.target),
								(this.dragNavigation.startX = this.dragNavigation.x = t.pageX),
								(this.dragNavigation.startY = this.dragNavigation.y = t.pageY),
								this.controls.$stageMove.addClass("ipgs-active"),
								this.controls.$stageMove.on(
									"mouseup",
									v.proxy(this._onBookMouse, this)
								),
								this.controls.$stageMove.on(
									"mouseout",
									v.proxy(this._onBookMouse, this)
								),
								this.controls.$stageMove.on(
									"mousemove",
									v.proxy(this._onBookMouse, this)
								),
								this.controls.$stage.focus();
							break;
						case "mouseup":
							this.dragNavigation.startX == this.dragNavigation.x &&
								this.dragNavigation.startY == this.dragNavigation.y &&
								(o = !0);
						case "mouseout":
							(e = this.touchMouseEvent.up),
								this.controls.$stageMove.removeClass("ipgs-active"),
								this.controls.$stageMove.off(
									"mouseup",
									v.proxy(this._onBookMouse, this)
								),
								this.controls.$stageMove.off(
									"mouseout",
									v.proxy(this._onBookMouse, this)
								),
								this.controls.$stageMove.off(
									"mousemove",
									v.proxy(this._onBookMouse, this)
								);
							break;
						case "mousemove":
							(e = this.touchMouseEvent.move),
								(this.dragNavigation.x = t.pageX),
								(this.dragNavigation.y = t.pageY);
							break;
						default:
							return;
					}
					var i = this._normalizeEvent(e, t, t.pageX, t.pageY);
					v(t.target).trigger(i),
						o &&
							this.dragNavigation.target &&
							this.dragNavigation.target.click();
				}
			},
			_onSwipeDown: function (t) {
				(this.lastDelta = { x: t.pageX, y: t.pageY }),
					this.controls.$bookTransform.addClass("ipgs-no-transition"),
					1 == this._getZoom() && this.engine.onSwipeDown(t);
			},
			_onSwipeMove: function (t) {
				1 == this._getZoom()
					? this.engine.onSwipeMove(t)
					: (this._setDeltaPosition({
							dx: t.pageX - this.lastDelta.x,
							dy: t.pageY - this.lastDelta.y,
					  }),
					  (this.lastDelta.x = t.pageX),
					  (this.lastDelta.y = t.pageY));
			},
			_onSwipeUp: function (t) {
				this.controls.$bookTransform.removeClass("ipgs-no-transition"),
					1 == this._getZoom() && this.engine.onSwipeUp(t);
			},
			_onBookMouseClick: function (t, e) {
				e = e || t.target;
				var o = v(e).closest(".ipgs-page");
				if (o.length)
					switch (this.engineClass) {
						case "ipgs-twopageflip":
							o.data("page-number") % 2 == 0
								? this._gotoPrev()
								: this._gotoNext();
							break;
						case "ipgs-onepageflip":
						case "ipgs-onepageswipe":
							this._gotoNext();
					}
			},
			_onPrevBtnClick: function (t) {
				t.preventDefault(),
					t.stopPropagation(),
					this.controls.$stage.focus(),
					this._gotoPrev();
			},
			_onNextBtnClick: function (t) {
				t.preventDefault(),
					t.stopPropagation(),
					this.controls.$stage.focus(),
					this._gotoNext();
			},
			_onKeyboardNavigation: function (t) {
				switch (t.which) {
					case 37:
						this.gotoPrev();
						break;
					case 39:
						this.gotoNext();
				}
			},
			_onMouseWheelNavigation: function (t, e) {
				this.config.mouseWheelPreventDefault &&
					(t.preventDefault(), t.stopPropagation()),
					e < 0 ? this.gotoPrev() : this.gotoNext();
			},
			_onDblClickZoomDefault: function (t) {
				this._setZoom({ zoom: 1 }, !0, !1);
			},
			_onDblTapZoomDefault: function (t) {
				if (this.tapped)
					clearTimeout(this.tapped),
						(this.tapped = null),
						this._setZoom({ zoom: 1 }, !0, !1);
				else {
					var e = this;
					this.tapped = setTimeout(function () {
						e.tapped = null;
					}, 300);
				}
			},
			_onMouseWheelZoom: function (t, e) {
				this.config.mouseWheelPreventDefault &&
					(t.preventDefault(), t.stopPropagation());
				var o,
					i = this.controls.$stage.get(0).getBoundingClientRect(),
					s = t.clientX,
					a = t.clientY,
					n = 1 + 0.1 * e;
				(s -= i.left),
					(a -= i.top),
					(o = {
						x: s - (i.right - i.left) / 2,
						y: a - (i.bottom - i.top) / 2,
					}),
					this._setDeltaZoom({ zoom: n, focalPoint: o });
			},
			_onKeyboardZoom: function (t) {
				switch (t.which) {
					case 189:
					case 109:
						var e = this._getZoom() - this.config.zoomStep;
						this._setZoom({ zoom: e }, !0, !1);
						break;
					case 187:
					case 107:
						e = this._getZoom() + this.config.zoomStep;
						this._setZoom({ zoom: e }, !0, !1);
				}
			},
			_onPinchZoomTouchStart: function (t) {
				(this.pinchZoom.aStart =
					t.originalEvent.touches[0] && 1 < t.originalEvent.touches.length),
					(this.pinchZoom.bStart = t.originalEvent.touches[1]),
					!this.pinchZoom.aIsMoving &&
						!this.pinchZoom.bIsMoving &&
						this.pinchZoom.aStart &&
						this.pinchZoom.bStart &&
						(t.preventDefault(),
						t.stopPropagation(),
						this.controls.$stage.focus(),
						this.controls.$bookTransform.addClass("ipgs-no-transition"),
						(this.pinchZoom.aStartX = t.originalEvent.touches[0].pageX),
						(this.pinchZoom.aStartY = t.originalEvent.touches[0].pageY),
						(this.pinchZoom.bStartX = t.originalEvent.touches[1].pageX),
						(this.pinchZoom.bStartY = t.originalEvent.touches[1].pageY),
						this.controls.$stage.on(
							"touchmove",
							v.proxy(this._onPinchZoomTouchMove, this)
						),
						(this.pinchZoom.zoom = this._getZoom()),
						(this.pinchZoom.startDate = new Date().getTime()),
						(this.pinchZoom.aCurX = this.pinchZoom.aStartX),
						(this.pinchZoom.aCurY = this.pinchZoom.aStartY),
						(this.pinchZoom.bCurX = this.pinchZoom.bStartX),
						(this.pinchZoom.bCurY = this.pinchZoom.bStartY),
						(this.pinchZoom.aIsMoving = !0),
						(this.pinchZoom.bIsMoving = !0));
			},
			_onPinchZoomTouchMove: function (t) {
				if (this.pinchZoom.aIsMoving || this.pinchZoom.bIsMoving) {
					(this.pinchZoom.aCurX = t.originalEvent.touches[0].pageX),
						(this.pinchZoom.aCurY = t.originalEvent.touches[0].pageY),
						(this.pinchZoom.bCurX = t.originalEvent.touches[1].pageX),
						(this.pinchZoom.bCurY = t.originalEvent.touches[1].pageY);
					var e = new Date().getTime(),
						o = (this.pinchZoom.startDate, this.pinchZoom.aCurX),
						i = this.pinchZoom.aCurY,
						s = this.pinchZoom.bCurX,
						a = this.pinchZoom.bCurY,
						n = o - this.pinchZoom.aStartX,
						r = i - this.pinchZoom.aStartY,
						h = s - this.pinchZoom.bStartX,
						l = a - this.pinchZoom.bStartY,
						g =
							(Math.abs(n),
							Math.abs(r),
							Math.abs(h),
							Math.abs(l),
							Math.sqrt(
								(this.pinchZoom.aStartX - this.pinchZoom.bStartX) *
									(this.pinchZoom.aStartX - this.pinchZoom.bStartX) +
									(this.pinchZoom.aStartY - this.pinchZoom.bStartY) *
										(this.pinchZoom.aStartY - this.pinchZoom.bStartY)
							) - Math.sqrt((o - s) * (o - s) + (i - a) * (i - a))),
						p = this.pinchZoom.zoom - g * this.config.pinchZoomCoef;
					this._setZoom({ zoom: p }, !0, !1);
				}
			},
			_onPinchZoomTouchEnd: function (t) {
				t.preventDefault(),
					t.stopPropagation(),
					this.controls.$stage.off(
						"touchmove",
						v.proxy(this._onPinchZoomTouchMove, this)
					),
					this.controls.$bookTransform.addClass("ipgs-no-transition"),
					this._pinchZoomReset();
			},
			_pinchZoomReset: function () {
				(this.pinchZoom.aStartX = !1),
					(this.pinchZoom.aStartY = !1),
					(this.pinchZoom.bStartX = !1),
					(this.pinchZoom.bStartY = !1),
					(this.pinchZoom.startDate = !1),
					(this.pinchZoom.aIsMoving = !1),
					(this.pinchZoom.bIsMoving = !1);
			},
			_onToolbarControlClick: function (t) {
				this.controls.$stage.focus();
			},
			_onPageFirst: function (t) {
				this.gotoPage(0);
			},
			_onPagePrev: function (t) {
				this.gotoPrev();
			},
			_pageNumberInputShow: function () {
				this.controls.toolbar.$pagenumber.addClass("ipgs-pagenumber-input"),
					this.controls.toolbar.$pagenumberInput.focus().val(this.currPage + 1);
			},
			_pageNumberInputHide: function () {
				this.controls.toolbar.$pagenumber.removeClass("ipgs-pagenumber-input");
			},
			_pageNumberInputUpdate: function () {
				var t = parseInt(this.controls.toolbar.$pagenumberInput.val(), 10);
				t <= 0
					? (t = 1)
					: t > this.pages.length
					? (t = this.pages.length)
					: isNaN(t) && (t = this.currPage + 1),
					this.controls.toolbar.$pagenumberInput.val(t),
					this.gotoPage(t);
			},
			_onPageNumberLabelClick: function (t) {
				t.preventDefault(),
					t.stopPropagation(),
					this.$body.one("click", v.proxy(this._onPageNumberInputHide, this)),
					this._pageNumberInputShow();
			},
			_onPageNumberInputClick: function (t) {
				t.preventDefault(), t.stopPropagation();
			},
			_onPageNumberInputHide: function (t) {
				this._pageNumberInputUpdate(), this._pageNumberInputHide();
			},
			_onPageNumberInputKeyup: function (t) {
				13 == t.which && this._pageNumberInputUpdate(),
					27 == t.which &&
						(this.$body.off(
							"click",
							v.proxy(this._onPageNumberInputHide, this)
						),
						this._pageNumberInputHide());
			},
			_onPageNext: function (t) {
				this.gotoNext();
			},
			_onPageLast: function (t) {
				this.gotoPage(this.pages.length);
			},
			_onToggleThumbnails: function (t) {
				this.controls.$thumbnails.toggleClass("ipgs-active"),
					this.controls.toolbar.$thumbnails.toggleClass("ipgs-active"),
					this.controls.$thumbnails.hasClass("ipgs-active") &&
						this._onThumbnailsScroll(),
					this.controls.$outline.hasClass("ipgs-active") &&
						(this.controls.$outline.toggleClass("ipgs-active"),
						this.controls.toolbar.$outline.toggleClass("ipgs-active"));
			},
			_onThumbnailsScroll: function (t) {
				clearTimeout(this.thumbnailsScrollTimerId),
					(this.thumbnailsScrollTimerId = setTimeout(
						v.proxy(this._onThumbnailsRefresh, this),
						this.thumbnailsScrollTimeout
					));
			},
			_onThumbnailsRefresh: function () {
				if (
					this.controls.$thumbnails.hasClass("ipgs-active") &&
					0 != this.pages.length
				)
					for (
						var t = this.controls.$thumbsWrap
								.find(".ipgs-thumb:first-child")
								.outerHeight(!0),
							e = this.controls.$thumbsWrap.outerHeight(),
							o = this.controls.$thumbsWrap.scrollTop(),
							i = o + e,
							s = Math.floor(o / t),
							a = Math.floor(i / t),
							n = s;
						n <= a && n < this.pages.length;
						n++
					)
						this._loadThumbData(this.pages[n].$thumb);
			},
			_onThumbClick: function (t) {
				t.preventDefault, t.stopPropagation();
				var e = v(t.target).data("page-index");
				this._gotoPage(e);
			},
			_onToggleOutline: function (t) {
				this.controls.$outline.toggleClass("ipgs-active"),
					this.controls.toolbar.$outline.toggleClass("ipgs-active"),
					this.controls.$thumbnails.hasClass("ipgs-active") &&
						(this.controls.$thumbnails.toggleClass("ipgs-active"),
						this.controls.toolbar.$thumbnails.toggleClass("ipgs-active"));
			},
			_onBookmarkClick: function (t) {
				t.preventDefault, t.stopPropagation();
				var e = v(t.currentTarget);
				if (v(t.target).is(".ipgs-state")) e.toggleClass("ipgs-folded");
				else {
					var o = this.bookmarksMap.get(e.data("id"));
					if (o)
						if (o.link) {
							var i = parseInt(o.link, 10);
							if (isNaN(i)) {
								var s = o.target ? "_" + o.target : "_self",
									a = v("<a>").attr("href", o.link).attr("target", s);
								this.$body.append(a), a.get(0).click(), a.remove();
							} else
								i < 0 ? (i += this.pages.length) : (i -= 1), this._gotoPage(i);
						} else o.dest && this._onPDFPageNavigation(o.dest);
				}
			},
			_onAnnotationClick: function (t) {
				t.preventDefault, t.stopPropagation();
				var e = (i = v(t.currentTarget)).data("annotation-id"),
					o = this.pdfAnnotationsRefCache[e];
				if (o)
					if (o.dest) this._onPDFPageNavigation(o.dest);
					else if (o.url) {
						var i = v("<a>").attr("href", o.url).attr("target", "_blank");
						this.$body.append(i), i.get(0).click(), i.remove();
					}
				return !1;
			},
			_onPDFPageNavigation: function (t) {
				var s = this;
				function a(i) {
					var t =
						i instanceof Object
							? s.pdfPagesRefCache[i.num + " " + i.gen + " R"]
							: i + 1;
					if (t) {
						t > s.pdf.numPages && (t = s.pdf.numPages);
						for (var e = 0; e < s.pages.length; e++) {
							if (s.pages[e].pdfPage == t) {
								s._gotoPage(e);
								break;
							}
						}
					} else
						s.pdf.getPageIndex(i).then(function (t) {
							var e = t + 1,
								o = i.num + " " + i.gen + " R";
							(s.pdfPagesRefCache[o] = e), a(i);
						});
				}
				t instanceof Array
					? a(t[0])
					: "string" == typeof t &&
					  this.pdf.getDestination(t).then(function (t) {
							t instanceof Array && a(t[0]);
					  });
			},
			_onClearTimeout: function (t) {
				clearTimeout(this.zoomTimerId);
			},
			__zoomIn: function () {
				var t = this;
				this.zoomTimerId = setTimeout(function () {
					t._zoomIn(), t.__zoomIn();
				}, 10);
			},
			__zoomOut: function () {
				var t = this;
				this.zoomTimerId = setTimeout(function () {
					t._zoomOut(), t.__zoomOut();
				}, 10);
			},
			_onZoomIn: function (t) {
				clearTimeout(this.zoomTimerId), this.__zoomIn();
			},
			_onZoomOut: function (t) {
				clearTimeout(this.zoomTimerId), this.__zoomOut();
			},
			_onZoomDefault: function (t) {
				this._setZoom({ zoom: 1 }, !0, !1);
			},
			_onToggleSound: function (t) {
				(this.config.flipSound = !this.config.flipSound),
					this.controls.toolbar.$sound.toggleClass(
						"ipgs-disable",
						!this.config.flipSound
					);
			},
			_onFullScreenChange: function (t) {
				b.fullscreen ||
				b.mozFullScreen ||
				b.webkitIsFullScreen ||
				b.msFullscreenElement
					? (this.$container.addClass("ipgs-fullscreen"),
					  this.$container.get(0).offsetHeight,
					  this.controls.toolbar.$fullscreen &&
							this.controls.toolbar.$fullscreen.addClass("ipgs-active"))
					: (this.$container.removeClass("ipgs-fullscreen"),
					  this.$container.get(0).offsetHeight,
					  this.controls.toolbar.$fullscreen &&
							this.controls.toolbar.$fullscreen.removeClass("ipgs-active"));
				var e = this;
				setTimeout(function () {
					e._onResize();
				}, 100);
			},
			_onToggleFullscreen: function (t) {
				if (b.fullscreenEnabled || b.webkitFullscreenEnabled)
					if (this.$container.hasClass("ipgs-fullscreen"))
						try {
							b.exitFullscreen
								? b.exitFullscreen()
								: b.mozCancelFullScreen
								? b.mozCancelFullScreen()
								: b.webkitCancelFullScreen
								? b.webkitCancelFullScreen()
								: b.msExitFullscreen && b.msExitFullscreen();
						} catch (t) {
							console.error("The browser does not support the fullscreen API");
						}
					else
						try {
							var e = this.$container.get(0);
							e.requestFullscreen
								? e.requestFullscreen()
								: e.mozRequestFullScreen
								? e.mozRequestFullScreen()
								: e.webkitRequestFullscreen
								? e.webkitRequestFullscreen()
								: e.msRequestFullscreen && e.msRequestFullscreen();
						} catch (t) {
							console.error("The browser does not support the fullscreen API");
						}
				else
					this.$container.toggleClass("ipgs-fullscreen"),
						this.$container.hasClass("ipgs-fullscreen")
							? (this.controls.toolbar.$fullscreen &&
									this.controls.toolbar.$fullscreen.addClass("ipgs-active"),
							  this.controls.$placeholder.insertBefore(this.$container),
							  this.$container.detach(),
							  v("body").append(this.$container))
							: (this.controls.toolbar.$fullscreen &&
									this.controls.toolbar.$fullscreen.removeClass("ipgs-active"),
							  this.$container.detach(),
							  this.$container.insertAfter(this.controls.$placeholder),
							  this.controls.$placeholder.remove()),
						this._onResize();
			},
			_onDownload: function (t) {
				if (this.config.pdfUrl) {
					var e = this.config.pdfUrl.substring(
							this.config.pdfUrl.lastIndexOf("/") + 1,
							this.config.pdfUrl.length
						),
						o = v("<a>").attr("href", this.config.pdfUrl).attr("download", e);
					this.$body.append(o), o.get(0).click(), o.remove();
				}
			},
			_getShareUrl: function () {
				return p.location.href;
			},
			_buildUrl: function (t, e) {
				var o = 0;
				for (var i in e)
					(t += (o ? "&" : "") + i + "=" + encodeURIComponent(e[i])), o++;
				return t;
			},
			_onToggleShare: function (t) {
				if (t) {
					t.preventDefault(), t.stopPropagation();
					var e = t.toElement || t.relatedTarget;
					0 !== this.controls.$shareDialog.has(e).length ||
						this.controls.$shareDialog.is(e) ||
						(this.controls.$share.toggleClass("ipgs-active"),
						this.controls.toolbar.$share.toggleClass("ipgs-active"));
				} else
					this.controls.$share.toggleClass("ipgs-active"),
						this.controls.toolbar.$share.toggleClass("ipgs-active");
			},
			_executeShareUrl: function (t) {
				var e = v("<a>").attr("href", t).attr("target", "_blank");
				this.$body.append(e), e.get(0).click(), e.remove();
			},
			_onShareClick: function (t, e) {
				var o = "",
					i = {};
				switch (t) {
					case "facebook":
						(o = "http://www.facebook.com/sharer.php?"),
							(i = { u: this._getShareUrl() });
						break;
					case "twitter":
						(o = "http://twitter.com/share?"),
							(i = { url: this._getShareUrl() });
						break;
					case "google":
						(o = "https://plus.google.com/share?"),
							(i = { url: this._getShareUrl() });
						break;
					case "linkedin":
						(o = "http://www.linkedin.com/shareArticle?"),
							(i = { mini: "true", url: this._getShareUrl() });
						break;
					case "email":
						(o = "mailto:?"), (i = { subject: "", body: this._getShareUrl() });
						break;
					default:
						return;
				}
				this._executeShareUrl(this._buildUrl(o, i));
			},
			_destroy: function () {
				var t = this.$container,
					e = this.$container.find(".ipgs-come-back");
				this._unbind(),
					this.pdf && this.pdf.destroy && this.pdf.destroy(),
					(this.pdf = null),
					t
						.removeClass("ipgs ipgs-ready")
						.removeClass(this.engineClass)
						.removeClass(this.themeClass)
						.empty(),
					v(e).each(function () {
						t.append(v(this).removeClass("ipgs-come-back"));
					});
			},
			gotoPage: function (t) {
				this._gotoPage(t - 1);
			},
			gotoNext: function () {
				this._gotoNext();
			},
			gotoPrev: function () {
				this._gotoPrev();
			},
			zoomIn: function () {
				this._zoomIn();
			},
			zoomOut: function () {
				this._zoomOut();
			},
			zoomDefault: function () {
				this._setZoom({ zoom: 1 }, !0, !1);
			},
			setBookEngine: function (t) {
				var e = t ? "ipgs-" + t.toLowerCase() : null;
				if (this.engineClass == e) return !1;
				switch (e) {
					case "ipgs-twopageflip":
					case "ipgs-onepageflip":
					case "ipgs-onepageswipe":
						break;
					default:
						return (
							console.error(this.config.txtFailedEngine + " [" + t + "]"), !1
						);
				}
				this.controls.$bookTransform.addClass("ipgs-no-transition"),
					this.controls.$book.addClass("ipgs-no-transition"),
					this.$container.removeClass(this.engineClass),
					(this.engineClass = e),
					this.$container.addClass(this.engineClass);
				for (var o = 0, i = this.pages.length; o < i; o++) {
					var s = this.pages[o];
					s.removeClass("ipgs-left").removeClass("ipgs-right"),
						s.css({ left: "" });
				}
				switch (
					(this.controls.$book.css({ transform: "" }), this.engineClass)
				) {
					case "ipgs-twopageflip":
						(this.bookWidth = 2 * this.config.pageWidth),
							(this.engine = new a(
								this,
								v.extend(!0, {}, this.config.twoPageFlip)
							));
						break;
					case "ipgs-onepageflip":
						(this.bookWidth = this.config.pageWidth),
							(this.engine = new n(
								this,
								v.extend(!0, {}, this.config.onePageFlip)
							));
						break;
					case "ipgs-onepageswipe":
						(this.bookWidth = this.config.pageWidth),
							(this.engine = new r(
								this,
								v.extend(!0, {}, this.config.onePageSwipe)
							));
				}
				this.controls.$book.css({ width: this.bookWidth }),
					0 < this.pages.length && this._updateBook(1),
					this._updateSize(),
					this.controls.$bookTransform.removeClass("ipgs-no-transition"),
					this.controls.$book.removeClass("ipgs-no-transition");
			},
		}),
		(v.fn.ipages = function (e, t) {
			if ("instance" == e) {
				var o = v(this).data(f);
				return (
					o ||
					void console.error(
						'Calling "instance" method on not initialized instance is forbidden'
					)
				);
			}
			return this.each(function () {
				var r = v(this),
					h = r.data(f),
					i = r.data("json-src"),
					l = r.data("pdf-src"),
					g = r.data("pdf-disable-range-requests"),
					p = r.data("book-engine"),
					c = parseInt(r.data("page-width"), 10),
					d = parseInt(r.data("page-height"), 10),
					u = v.isPlainObject(e) ? e : i ? null : {};
				if ("destroy" == e)
					return h
						? (r.removeData(f), void h._destroy())
						: void console.error(
								'Calling "destroy" method on not initialized instance is forbidden'
						  );
				function t() {
					for (
						var t = v.extend(!0, {}, m.prototype.defaultConfig, u), e = 0;
						e < t.pages.length;
						e++
					) {
						var o = v.extend(!0, {}, m.prototype.defaultPage, t.pages[e]);
						(t.pages[e] = o).pdfpage &&
							((o.page = o.pdfpage), delete o.pdfpage);
					}
					function i(t, e) {
						for (var o = [], i = 0; i < e.length; i++)
							for (var s = e[i], a = 0; a < t.length; a++) {
								if ((r = t[a]).type == s.type) {
									var n = v.extend(!0, {}, r, s);
									o.push(n);
								}
							}
						for (i = 0; i < t.length; i++) {
							var r = t[i],
								h = !0;
							for (a = 0; a < e.length; a++) {
								s = e[a];
								if (r.type == s.type) {
									h = !1;
									break;
								}
							}
							if (h) {
								n = v.extend(!0, {}, r);
								o.push(n);
							}
						}
						return o;
					}
					if (
						((t.bookEngine = p || t.bookEngine),
						(t.pageWidth = isNaN(c) ? t.pageWidth : c),
						(t.pageHeight = isNaN(d) ? t.pageHeight : d),
						"boolean" == typeof g && (t.pdfDisableRangeRequests = g),
						null == t.pdfUrl &&
							l &&
							((t.pdfUrl = l),
							(t.pdfAutoCreatePages = !0),
							(t.pageSizeAuto = !0)),
						u.toolbarControls &&
							u.toolbarControls instanceof Array &&
							(t.toolbarControls = i(
								m.prototype.defaultConfig.toolbarControls,
								u.toolbarControls
							)),
						u.shareControls &&
							u.shareControls instanceof Array &&
							(t.shareControls = i(
								m.prototype.defaultConfig.shareControls,
								u.shareControls
							)),
						u.bookmarks &&
							u.bookmarks instanceof Array &&
							(t.bookmarks = v.extend(!0, [], u.bookmarks)),
						null == t.flipSoundUrl)
					) {
						var s = b.getElementsByTagName("script"),
							a = "jquery.ipages.min",
							n = null;
						if (s && 0 < s.length)
							for (var e in s)
								if (s[e].src && s[e].src.match(new RegExp(a + "\\.js$"))) {
									n = s[e].src.replace(new RegExp("(.*)" + a + "\\.js$"), "$1");
									break;
								}
						n && (t.flipSoundUrl = n + "page-flip.mp3");
					}
					(h = new m(r, t)), r.data(f, h);
				}
				h && (r.removeData(f), h._destroy(), (h = null)),
					null == u
						? v
								.ajax({ url: i, type: "GET", dataType: "json" })
								.done(function (t) {
									u = v.isPlainObject(t) ? t : {};
								})
								.fail(function (t, e, o) {
									console.error(o),
										(u = { toolbar: !1, jsonFail: !0, jsonUrl: i });
								})
								.always(function () {
									t();
								})
						: t();
			});
		}),
		v(".ipgs-flipbook").ipages();
})(jQuery, window, document);
